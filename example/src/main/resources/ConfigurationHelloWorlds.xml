<module>
	<adapter name="HelloWorlds" active="${HelloWorlds.active}">
		<receiver name="HelloWorlds" >
			<!-- This listener is used when the API is called as specified in OpenAPI 3.0 at the Webservices page -->
			<listener
				name="HelloWorlds"
				className="nl.nn.adapterframework.http.rest.ApiListener"
				uriPattern="hello-worlds"
			/>
		</receiver>
		<receiver name="HelloWorlds">
			<!-- This listener is used by the scheduler -->
			<listener
				name="HelloWorlds"
				className="nl.nn.adapterframework.receivers.JavaListener"
			/>
		</receiver>
		<pipeline firstPipe="CheckInputIsXml">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			<pipe
				name="CheckInputIsXml"
				className="nl.nn.adapterframework.pipes.XmlWellFormedChecker"
				>
				<forward name="success" path="CallHelloWorld"/>
				<forward name="failure" path="ConvertEmptyMessageToDummyMessage"/>
			</pipe>
			<!-- Input will be null when called using the ApiListener and empty string when called by scheduler -->
			<pipe
				name="ConvertEmptyMessageToDummyMessage"
				className="nl.nn.adapterframework.pipes.EchoPipe"
				emptyInputReplacement="Dummy"
			/>
			<pipe
				name="Text2Xml"
				className="nl.nn.adapterframework.pipes.Text2XmlPipe"
				xmlTag="tests"
				splitLines="true"
			/>
			<pipe
				name="RenameElementLineToTest"
				className="nl.nn.adapterframework.pipes.XsltPipe"
				styleSheetName="HelloWorlds/xsl/RenameElementLineToTest.xsl"
			/>
			<pipe
				name="CheckDummyMessage"
				className="nl.nn.adapterframework.pipes.XmlSwitch"
				xpathExpression="/tests/test = 'Dummy'"
				>
				<forward name="true" path="CreateExampleMessage"/>
				<forward name="false" path="CallHelloWorld"/>
			</pipe>
			<pipe
				name="CreateExampleMessage"
				className="nl.nn.adapterframework.pipes.FixedResultPipe"
				returnString="
						First line
						&#10;
						Second line
						&#10;
						Third line
						&#10;
						Fourth line
						"
				>
				<forward name="success" path="Text2Xml"/>
			</pipe>
			<pipe
				name="CallHelloWorld"
				className="nl.nn.adapterframework.pipes.ForEachChildElementPipe"
				blockSize="3"
				blockPrefix="&lt;batch>"
				blockSuffix="&lt;/batch>"
				elementXPathExpression="/tests/test"
				>
				<sender
					className="nl.nn.adapterframework.senders.IbisLocalSender"
					javaListener="HelloWorld"
				/>
				<forward name="success" path="EXIT"/>
			</pipe>
		</pipeline>
	</adapter>
	<scheduler>
		<job
			name="HelloWorlds"
			cronExpression="0 55 2 * * ?"
			javaListener="HelloWorlds"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
	</scheduler>
</module>
