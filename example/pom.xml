<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.frankframework</groupId>
		<artifactId>frankframework-bundle-minimal</artifactId>
		<version>${revision}</version>
		<relativePath>../bundle-minimal/pom.xml</relativePath>
	</parent>

	<artifactId>frankframework-example</artifactId>
	<name>Frank!Framework example</name>
	<packaging>war</packaging>

	<properties>
		<m2eclipse.wtp.contextRoot>iaf-example</m2eclipse.wtp.contextRoot>
		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.driver.version}</version>
		</dependency>
		<!-- Includes missing jakarta.jms.JMSExceptions class -->
		<dependency>
			<groupId>jakarta.jms</groupId>
			<artifactId>jakarta.jms-api</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- This should be the only required test dependency to run IbisTester -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- use maven-jar-plugin to make separate artifacts of context, configurations, resources and testscenarios, to inject them into deployments -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>zip-context</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>context</classifier>
							<classesDirectory>src/main/webapp/META-INF</classesDirectory>
							<includes>context.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>zip-configurations</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>configurations</classifier>
							<classesDirectory>src/main</classesDirectory>
							<includes>configurations/</includes>
						</configuration>
					</execution>
					<execution>
						<id>zip-resources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>resources</classifier>
							<classesDirectory>src/main/resources</classesDirectory>
						</configuration>
					</execution>
					<execution>
						<id>zip-scenarios</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>scenarios</classifier>
							<classesDirectory>src/test/testtool</classesDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Ignoring JaCoCo reports because this module does not contain any Java classes.-->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
