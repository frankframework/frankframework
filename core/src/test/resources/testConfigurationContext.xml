<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Beans defined in this file are unique for every configuration. If you want 
	to reuse a bean over multiple configurations, add it to the SpringApplicationContext.xml
	Singleton beans are managed by Spring and will be closed upon configuration unload.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<import resource="testApplicationContext.xml"/>

	<bean name="configurationDigester" class="nl.nn.adapterframework.testutil.mock.ConfigurationDigesterMock" scope="singleton" />

	<bean name="lifecycleProcessor" class="nl.nn.adapterframework.lifecycle.ConfiguringLifecycleProcessor" />

	<bean name="configurationWarnings" class="nl.nn.adapterframework.configuration.ConfigurationWarnings" />
	<bean name="applicationWarnings" class="nl.nn.adapterframework.configuration.ApplicationWarnings" />

	<bean name="adapterManager" class="nl.nn.adapterframework.configuration.AdapterManager" autowire="byType" scope="singleton" />
	<bean name="scheduleManager" class="nl.nn.adapterframework.configuration.ScheduleManager" autowire="byType" scope="singleton" />

	<bean name="listenerContainer" class="nl.nn.adapterframework.receivers.PullingListenerContainer" scope="prototype" />
	<bean name="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" scope="singleton" />

	<bean name="configurationMetrics" class="nl.nn.adapterframework.statistics.MetricsInitializer" />

	<bean name="jdbcMigrator" class="nl.nn.adapterframework.testutil.mock.DatabaseMigratorMock" scope="prototype" lazy-init="true" />

	<bean id="ConfigurationMessageListener" class="nl.nn.adapterframework.testutil.ConfigurationMessageEventListener" scope="singleton" />

	<bean name="sharedResources" class="nl.nn.adapterframework.core.SharedResources" scope="singleton"/>
</beans>
