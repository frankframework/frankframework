<?xml version="1.0" encoding="UTF-8"?>
<!--
	Beans defined in this file are unique for every configuration. If you want
	to reuse a bean over multiple configurations, add it to the SpringApplicationContext.xml
	Singleton beans are managed by Spring and will be closed upon configuration unload.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-autowire="byName"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<import resource="testApplicationContext.xml" />
	<import resource="SpringConfigurationContext.xml" />

	<!--
		Spring file used to overwrite certain beans that should be mocked during testing.
		Mocked classes should contain the primary attribute to ensure they are used!
	-->
	<bean primary="true" name="configurationDigester" class="org.frankframework.testutil.mock.ConfigurationDigesterMock" />

	<bean primary="true" name="jdbcMigrator" class="org.frankframework.testutil.mock.DatabaseMigratorMock" />

	<!-- bean just needs to be here to override the 'default' specified in SpringConfigurationContext.xml -->
	<bean primary="true" name="configFlowGenerator" class="java.lang.Object" />

	<bean primary="true" name="eventPublisher" class="org.frankframework.testutil.mock.EventPublisherMock" />

	<bean primary="true" name="meterRegistry" class="org.frankframework.metrics.LocalStatisticsRegistry" autowire="byName" />

	<bean id="ConfigurationMessageListener" class="org.frankframework.testutil.ConfigurationMessageEventListener" />
</beans>
