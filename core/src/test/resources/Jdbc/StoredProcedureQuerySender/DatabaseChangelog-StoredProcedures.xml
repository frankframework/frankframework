<databaseChangeLog
		xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

	<changeSet id="IAF-UnitTests-1" author="Tim van der Leeuw">
		<comment>Create SP_TESTDATA for Tests</comment>
		<createTable tableName="SP_TESTDATA">
			<column name="TKEY" type="BIGINT" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" primaryKeyName="PK_DUMMYTABLE"/>
			</column>
			<column name="TCHAR" type="CHAR(1)"/>
			<column name="TMESSAGE" type="VARCHAR(100)"/>
		</createTable>
	</changeSet>

	<changeSet id="IAF-UnitTests-2" author="Tim van der Leeuw" dbms="postgresql">
		<comment>Create Stored Procedure to insert data</comment>
		<sql>
			DROP PROCEDURE IF EXISTS INSERT_MESSAGE;
			CREATE OR REPLACE PROCEDURE INSERT_MESSAGE(
				MESSAGE VARCHAR(100),
				STATUS CHAR(1)
			) LANGUAGE SQL
			BEGIN ATOMIC
			INSERT INTO SP_TESTDATA(TMESSAGE, TCHAR) VALUES (MESSAGE, STATUS);
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-3" author="Tim van der Leeuw" dbms="postgresql">
		<comment>Create Stored Procedure to select single item</comment>
		<sql>
			DROP PROCEDURE IF EXISTS GET_MESSAGE_BY_ID;
			CREATE OR REPLACE PROCEDURE GET_MESSAGE_BY_ID(
				IN ID BIGINT,
				OUT MESSAGE VARCHAR
			) LANGUAGE SQL
			BEGIN ATOMIC
			SELECT TMESSAGE FROM SP_TESTDATA WHERE TKEY = ID;
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-4" author="Tim van der Leeuw" dbms="postgresql">
		<comment>Create Stored Procedure to select single row</comment>
		<sql>
			DROP PROCEDURE IF EXISTS GET_MESSAGE_AND_TYPE_BY_ID;
			CREATE OR REPLACE PROCEDURE GET_MESSAGE_AND_TYPE_BY_ID(
				IN ID BIGINT,
				OUT MESSAGE VARCHAR,
				OUT STATUS CHAR
			) LANGUAGE SQL
			BEGIN ATOMIC
			SELECT TMESSAGE, TCHAR FROM SP_TESTDATA WHERE TKEY = ID;
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-2" author="Tim van der Leeuw" dbms="mysql,mariadb">
		<comment>Create Stored Procedure to insert data</comment>
		<sql>
			DROP PROCEDURE IF EXISTS INSERT_MESSAGE;
			CREATE PROCEDURE INSERT_MESSAGE(
				MESSAGE VARCHAR(100),
				STATUS CHAR(1)
			) LANGUAGE SQL
			BEGIN
				INSERT INTO SP_TESTDATA(TMESSAGE, TCHAR) VALUES (MESSAGE, STATUS);
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-3" author="Tim van der Leeuw" dbms="mysql,mariadb">
		<comment>Create Stored Procedure to select single item</comment>
		<sql>
			DROP PROCEDURE IF EXISTS GET_MESSAGE_BY_ID;
			CREATE PROCEDURE GET_MESSAGE_BY_ID(
				IN ID BIGINT,
				OUT MESSAGE VARCHAR(100)
			) LANGUAGE SQL
			BEGIN
				SELECT TMESSAGE INTO MESSAGE FROM SP_TESTDATA WHERE TKEY = ID;
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-4" author="Tim van der Leeuw" dbms="mysql,mariadb">
		<comment>Create Stored Procedure to select single row</comment>
		<sql>
			DROP PROCEDURE IF EXISTS GET_MESSAGE_AND_TYPE_BY_ID;
			CREATE PROCEDURE GET_MESSAGE_AND_TYPE_BY_ID(
				IN ID BIGINT,
				OUT MESSAGE VARCHAR(100),
				OUT STATUS CHAR
			) LANGUAGE SQL
			BEGIN
				SELECT TMESSAGE, TCHAR INTO MESSAGE, STATUS FROM SP_TESTDATA WHERE TKEY = ID;
			END;
		</sql>
	</changeSet>

	<changeSet id="IAF-UnitTests-5" author="Tim van der Leeuw" dbms="mysql,mariadb">
		<comment>Create Stored Procedure to select multiple rows</comment>
		<sql>
			DROP PROCEDURE IF EXISTS GET_MESSAGES_BY_CONTENT;
			CREATE PROCEDURE GET_MESSAGES_BY_CONTENT(
				IN MESSAGE VARCHAR(100)
			)
			BEGIN
				SELECT * FROM SP_TESTDATA WHERE TMESSAGE = MESSAGE ORDER BY TKEY;
			END;
		</sql>
	</changeSet>

</databaseChangeLog>
