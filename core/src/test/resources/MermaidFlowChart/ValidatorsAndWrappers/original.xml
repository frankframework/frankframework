<module>
	<adapter name="Test1" description="test" active="${test}">

		<receiver name="Test1">
			<listener name="Test1_Listener" className="nl.nn.adapterframework.receivers.JavaListener"/>
		</receiver>

		<pipeline firstPipe="TestFirstPipe">
			<exits>
				<exit path="EXIT" state="success" />
				<exit path="ServerError" state="error" />
			</exits>

			<inputWrapper/>
			<outputWrapper/>

			<pipe name="TestFirstPipe" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="Test2_Listener">
					<param name="test" xpathExpression="test"/>
				</sender>

				<forward name="success" path="TestSecondPipe" />
				<forward name="exception" path="ErrorHandling" />
			</pipe>

			<pipe name="TestSecondPipe" className="nl.nn.adapterframework.pipes.XmlIf"
				  elementXPathExpression="test">
				<forward name="then" path="EXIT" />
				<forward name="else" path="ServerError" />
			</pipe>

			<pipe name="ErrorHandling" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="errorHandling.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>
		</pipeline>
	</adapter>

	<adapter name="Test2" description="test" active="${test}">

		<receiver name="Test2">
			<listener name="Test2_Listener" className="nl.nn.adapterframework.receivers.JavaListener"/>
		</receiver>

		<pipeline firstPipe="TestFirstPipe">
			<exits>
				<exit path="EXIT" state="success" />
				<exit path="ServerError" state="error" />
			</exits>

			<inputValidator>
				<forward name="exception" path="InputValidationError" />
			</inputValidator>
			<outputValidator>
				<forward name="exception" path="OutputValidationError" />
			</outputValidator>

			<pipe name="TestFirstPipe" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="Test3_Listener">
					<param name="test" xpathExpression="test"/>
				</sender>

				<forward name="success" path="TestSecondPipe" />
				<forward name="exception" path="ErrorHandling" />
			</pipe>

			<pipe name="TestSecondPipe" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="test.xsl">
				<forward name="success" path="EXIT" />
				<forward name="failure" path="ServerError" />
			</pipe>

			<pipe name="ErrorHandling" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="errorHandling.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>

			<pipe name="InputValidationError" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="validationError.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>

			<pipe name="OutputValidationError" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="validationError.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>
		</pipeline>
	</adapter>

	<adapter name="Test3" description="test" active="${test}">

		<receiver name="Test3">
			<listener name="Test3_Listener" className="nl.nn.adapterframework.receivers.JavaListener"/>
		</receiver>

		<pipeline firstPipe="TestFirstPipe">
			<exits>
				<exit path="EXIT" state="success" />
				<exit path="ServerError" state="error" />
			</exits>

			<inputValidator>
				<forward name="exception" path="InputValidationError" />
			</inputValidator>
			<inputWrapper/>
			<outputWrapper/>
			<outputValidator>
				<forward name="exception" path="OutputValidationError" />
			</outputValidator>

			<pipe name="TestFirstPipe" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="Test3_Listener">
					<param name="test" xpathExpression="test"/>
				</sender>

				<forward name="success" path="TestSecondPipe" />
				<forward name="exception" path="ErrorHandling" />
			</pipe>

			<pipe name="TestSecondPipe" className="nl.nn.adapterframework.pipes.XmlIf"
				  elementXPathExpression="test">
				<forward name="then" path="EXIT" />
				<forward name="else" path="ServerError" />
			</pipe>

			<pipe name="ErrorHandling" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="errorHandling.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>

			<pipe name="ErrorHandling" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="errorHandling.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>

			<pipe name="InputValidationError" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="validationError.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>

			<pipe name="OutputValidationError" className="nl.nn.adapterframework.pipes.XsltPipe"
				  styleSheet="validationError.xsl"
			>
				<forward name="success" path="ServerError" />
				<forward name="failure" path="ServerError"/>
			</pipe>
		</pipeline>
	</adapter>
</module>