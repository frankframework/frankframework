<adapter name="HelloLines" description="Call http://localhost/api/hello-lines to see &lt;results&gt; ... Hello World One ... Two ... Three ... Four ... Five ... &lt;/results&gt;" extensive="true">
	<receiver name="testtool-HelloLines">
		<listener className="org.frankframework.receivers.JavaListener" serviceName="testtool-HelloLines"/>
	</receiver>
	<receiver name="ApiListener">
		<listener name="HelloLines" uriPattern="hello-lines" className="org.frankframework.http.rest.ApiListener"/>
	</receiver>
	<receiver name="testtool-HelloLines-1">
		<listener className="org.frankframework.receivers.JavaListener" serviceName="testtool-HelloLines-1"/>
	</receiver>
	<receiver name="WebServiceListener">
		<listener name="HelloLines" serviceNamespaceURI="urn:hello-lines" soap="false" className="org.frankframework.http.WebServiceListener"/>
	</receiver>
	<receiver name="testtool-HelloLines-2">
		<listener className="org.frankframework.receivers.JavaListener" serviceName="testtool-HelloLines-2"/>
	</receiver>
	<pipeline firstPipe="Remove namespaces">
		<inputValidator name="ValidateInput" schemaLocation="urn:hello-lines HelloLines/xsd/Lines.xsd" addNamespaceToSchema="true" soapBody="lines" allowPlainXml="true" acceptNamespaceLessXml="true" rootElementSessionKey="receivedRootElement" reasonSessionKey="validatorMessage" className="org.frankframework.soap.SoapValidator">
			<forward name="failure" path="Create example plain text message"/>
			<forward name="parserError" path="Transform plain text message to XML"/>
		</inputValidator>
		<inputWrapper onlyIfSessionKey="receivedRootElement" onlyIfValue="Envelope" direction="UNWRAP" className="org.frankframework.soap.SoapWrapperPipe"/>
		<outputWrapper onlyIfSessionKey="receivedRootElement" onlyIfValue="Envelope" className="org.frankframework.soap.SoapWrapperPipe"/>
		<exit path="READY" state="SUCCESS"/>
		<pipe name="Remove namespaces" removeNamespaces="true" xpathExpression="/" outputType="XML" className="org.frankframework.pipes.XsltPipe">
			<forward name="success" path="Only one line?"/>
		</pipe>
		<pipe name="Only one line?" xpathExpression="count(/lines/*) = 1" className="org.frankframework.pipes.XmlSwitch">
			<forward name="true" path="Call HelloWorld"/>
			<forward name="false" path="Call HelloWorld for every line"/>
		</pipe>
		<pipe name="Call HelloWorld" className="org.frankframework.pipes.SenderPipe" timeoutOnResult="[timeout]" exceptionOnResult="[error]">
			<sender javaListener="HelloWorld" className="org.frankframework.senders.IbisLocalSender"/>
			<forward name="success" path="Transform result to XML"/>
		</pipe>
		<pipe name="Transform result to XML" xmlTag="result" className="org.frankframework.pipes.Text2XmlPipe">
			<forward name="success" path="Add documentation"/>
		</pipe>
		<pipe name="Call HelloWorld for every line" blockSize="2" blockPrefix="&lt;batch&gt;" blockSuffix="&lt;/batch&gt;" elementXPathExpression="/lines/*" className="org.frankframework.pipes.ForEachChildElementPipe" timeoutOnResult="[timeout]" exceptionOnResult="[error]">
			<sender javaListener="HelloWorld" className="org.frankframework.senders.IbisLocalSender"/>
			<param name="message"/>
			<forward name="success" path="Add documentation"/>
		</pipe>
		<pipe name="Add documentation" styleSheetName="HelloLines/xsl/AddDocumentation.xsl" className="org.frankframework.pipes.XsltPipe">
			<param name="originalMessage" sessionKey="originalMessage"/>
			<param name="validatorMessage" sessionKey="validatorMessage"/>
			<param name="exampleMessage" sessionKey="exampleMessage"/>
			<param name="exampleMessageAsXml" sessionKey="exampleMessageAsXml"/>
			<param name="exampleMessageAsJson" sessionKey="exampleMessageAsJson"/>
			<forward name="success" path="READY"/>
		</pipe>

		<pipe name="Create example plain text message" value="Line One&#10;Line Two&#10;Line Three&#10;Line Four&#10;Line Five" sessionKey="exampleMessage" className="org.frankframework.pipes.PutInSession">
			<forward name="success" path="Transform plain text message to XML"/>
		</pipe>
		<pipe name="Transform plain text message to XML" xmlTag="lines" splitLines="true" className="org.frankframework.pipes.Text2XmlPipe">
			<forward name="success" path="Add position to elements"/>
		</pipe>
		<pipe name="Add position to elements" styleSheetName="HelloLines/xsl/AddPositionToElements.xsl" storeResultInSessionKey="exampleMessageAsXml" className="org.frankframework.pipes.XsltPipe">
			<forward name="success" path="Transform XML message to JSON message"/>
		</pipe>
		<pipe name="Transform XML message to JSON message" noNamespaceSchemaLocation="HelloLines/xsd/Lines.xsd" root="lines" outputFormat="JSON" preserveInput="true" storeResultInSessionKey="exampleMessageAsJson" throwException="true" className="org.frankframework.pipes.Json2XmlValidator">
			<forward name="success" path="Remove namespaces"/>
		</pipe>
	</pipeline>
</adapter>
