<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<digester-rules>
	<!-- Rules are parsed with the DigesterRuleParser. Objects will be created with the Spring Beans Factory. -->
	<!-- See DigesterRule for more information -->

	<rule pattern="IOS-Adaptering" factory="null"/><!-- deprecated, use configuration or module instead -->
	<rule pattern="configuration" factory="null"/>

	<rule pattern="*/include" factory="nl.nn.adapterframework.configuration.ConfigurationDigesterFactory" selfRegisterMethod="include"/>


	<rule pattern="*/jmsRealms" factory="nl.nn.adapterframework.configuration.JmsRealmsFactory"/>
	<rule pattern="*/jmsRealm" registerMethod="registerJmsRealm"/>

	<rule pattern="*/sapSystem" object="nl.nn.adapterframework.extensions.sap.SapSystem" selfRegisterMethod="registerItem"/>

	<rule pattern="*/adapter" registerMethod="registerAdapter" />
	<rule pattern="*/pipeline" registerMethod="setPipeLine"/>
	<rule pattern="*/errorMessageFormatter" registerMethod="setErrorMessageFormatter"/>

	<rule pattern="*/receiver" registerMethod="registerReceiver"/>
	<rule pattern="*/sender" registerMethod="setSender"/>
	<rule pattern="*/senders" registerMethod="registerSender"/> <!-- e.g. for ParallelSenders -->
	<rule pattern="*/listener" factory="nl.nn.adapterframework.configuration.ListenerFactory" registerMethod="setListener"/>
	<rule pattern="*/errorSender" registerMethod="setErrorSender"/>
	<rule pattern="*/messageLog" registerMethod="setMessageLog"/>
	<rule pattern="*/inProcessStorage" registerMethod="setInProcessStorage"/>
	<rule pattern="*/errorStorage" registerMethod="setErrorStorage"/>
	<rule pattern="*/inputValidator" registerMethod="setInputValidator"/>
	<rule pattern="*/outputValidator" registerMethod="setOutputValidator"/>
	<rule pattern="*/inputWrapper" registerMethod="setInputWrapper"/>
	<rule pattern="*/outputWrapper" registerMethod="setOutputWrapper"/>

	<rule pattern="*/pipe" registerMethod="addPipe" paramtype="nl.nn.adapterframework.core.IPipe"/>

	<!-- forward element is on the pipeline / global-forward as well as on the pipe element -->
	<rule pattern="*/forward" registerMethod="registerForward"/>
	<rule pattern="*/child" registerMethod="registerChild"/>
	<rule pattern="*/outputFields" registerMethod="registerOutputFields"/>
	<rule pattern="*/inputFields" registerMethod="registerInputFields"/>
	<rule pattern="*/pipeline/exits/exit" registerMethod="registerPipeLineExit"/>

	<rule pattern="*/scheduler/job" registerMethod="registerScheduledJob"/>
	<rule pattern="*/locker" registerMethod="setLocker"/>
	<rule pattern="*/param" registerMethod="addParameter" />
	<rule pattern="*/directoryCleaner" registerMethod="addDirectoryCleaner" />

	<!-- batch related rules -->
	<rule pattern="*/readerFactory" registerMethod="setReaderFactory"/>
	<rule pattern="*/manager" registerMethod="registerManager"/>
	<rule pattern="*/manager/flow" factory="nl.nn.adapterframework.configuration.RecordHandlingFlowFactory" registerMethod="addHandler"/>
	<rule pattern="*/recordHandler" registerMethod="registerRecordHandler"/>
	<rule pattern="*/resultHandler" registerMethod="registerResultHandler"/>

	<rule pattern="*/statisticsHandler" registerMethod="registerStatisticsHandler"/>
	<rule pattern="*/cache" registerMethod="setCache"/>
</digester-rules>
