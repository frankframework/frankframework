# Log4j for IAF is configured with log4j4ibis.properties and log4j4ibis.xml,
# see LogUtil.java. Libraries like Spring need log4j.properties on the
# classpath to enable logging. A log4j.properties may also be present on
# application server classpath and override this one.

log4j.rootLogger=WARN, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%t]%x%X{btm-gtrid} %c %m%n
# See http://docs.codehaus.org/display/BTM/DebugLogging for %X{btm-gtrid}

# Put some loggers of special interest on DEBUG level
#log4j.logger.org.apache.activemq=DEBUG
#log4j.logger.org.springframework=DEBUG
#log4j.logger.bitronix.tm=DEBUG

# Suppress RestEasy javax.ws.rs.NotFoundException
log4j.logger.org.jboss.resteasy=ERROR

# Httpclient logging
#log4j.logger.httpclient.wire=DEBUG, httpclient
#log4j.additivity.httpclient.wire=false
#log4j.logger.org.apache.commons.httpclient=INFO, httpclient
#log4j.additivity.org.apache.commons.httpclient=false
#log4j.appender.httpclient=org.apache.log4j.RollingFileAppender
#log4j.appender.httpclient.MaxFileSize=5MB
#log4j.appender.httpclient.MaxBackupIndex=2
#log4j.appender.httpclient.layout=org.apache.log4j.EnhancedPatternLayout
#log4j.appender.httpclient.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%t] %c{2} - %m%n
#log4j.appender.httpclient.File=${log.dir}/ija_api-httpclient.log

# Suppress CglibAopProxy Unable to proxy method [...SimpleAsyncTaskExecutor...] because it is final
log4j.logger.org.springframework.aop.framework.CglibAopProxy=ERROR