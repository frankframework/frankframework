<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=
		"
		http://www.springframework.org/schema/beans classpath:xml/xsd/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util classpath:xml/xsd/spring-util-3.2.xsd
		"
	>

	<!--
	Use Spring DataSourceTransactionManager which is good enough in case only
	one data source needs to be managed by the transaction manager.
	In case no database is available configure an in-memory database like H2 in
	Tomcat to still be able to use this configuration.
	In order to properly handle 'Propagation: Supports', set property
	'transactionSynchronization' to 'Synchronize on actual transaction'.
	-->
	<bean
		id="txManagerReal"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		>
		<property name="dataSource">
			<ref bean="defaultDataSource"/>
		</property>
		<property name="transactionSynchronization">
			<util:constant static-field="org.springframework.transaction.support.AbstractPlatformTransactionManager.SYNCHRONIZATION_ON_ACTUAL_TRANSACTION"/>
		</property>
	</bean>

	<bean
		id="defaultDataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy"
		>
		<property name="targetDataSource">
			<ref bean="jndiDataSource"/>
		</property>
	</bean>

	<bean
		name="jndiDataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean"
		>
		<property name="lookupOnStartup" value="${jdbc.required}"/>
		<property name="ProxyInterface" value="javax.sql.DataSource"/>
		<property name="jndiName" value="${jndiContextPrefix}${jdbc.datasource.default}"/>
	</bean>

	<!-- Make the proxied data source available to the JdbcFacade -->
	<bean id="proxiedDataSources" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="${jdbc.datasource.default}">
					<ref bean="defaultDataSource"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>

	<bean
		name="jndiContextPrefixPropertyPlaceholderConfigurer"
		class="nl.nn.adapterframework.configuration.OverwritePropertyPlaceholderConfigurer"
		autowire="byName"
		>
		<property name="propertyName" value="jndiContextPrefix"/>
		<property name="propertyValue" value="java:comp/env/"/>
	</bean>

</beans>
