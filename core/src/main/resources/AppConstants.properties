#
# NN IOS AdapterFramework
# Application Constants
#

#These files will be loaded also
ADDITIONAL.PROPERTIES.FILE=CompanySpecifics.properties,CompanySpecifics_${otap.side}.properties,CompanySpecifics_${otap.stage}.properties,DeploymentSpecifics.properties,BuildInfo.properties,ServerSpecifics_${application.server.type}${application.server.type.custom}.properties,SideSpecifics_${otap.side}.properties,SideSpecifics_${otap.side}_${application.server.type}${application.server.type.custom}.properties,StageSpecifics_${otap.stage}.properties,StageSpecifics_${otap.stage}_${application.server.type}${application.server.type.custom}.properties,Test.properties
ADDITIONAL.PROPERTIES.FILE.SUFFIX=SC

application.server.type=
application.server.type.custom=

application.name=IAF
application.version=7.0-RC3-SNAPSHOT
#${project.version}
application.build_id=not-used

# the name of this instance of the AdapterFramework
instance.name=Ibis
instance.version=
# build id specified in BuildInfo.properties
#instance.build_id=not-used

configurations.names.application=IAF_Util,IAF_WebControl,${configurations.names}
configurations.names=${instance.name}

configurations.directory=${webapp.realpath}/../Configuration

configurations.autoStart=true

adapters.autoStart=true

#
# upload.dir is used to set the directory used by Struts to upload files.
# It is used in the ibisconsole, for instance in 'test a pipeline'
# N.B. setting this variable cause also generation of jsp to take place in this directory (at least in WebSphere)
upload.dir=${log.dir}

ibis.tmpdir=${java.io.tmpdir}

#
# cache.dir is used by caches, to store data on disk.
#
cache.dir=${log.dir}

cache.default.maxElementsInMemory=100
cache.default.memoryStoreEvictionPolicy=LRU
cache.default.eternal=false
cache.default.timeToLiveSeconds=36000
cache.default.timeToIdleSeconds=36000
cache.default.overflowToDisk=false
cache.default.maxElementsOnDisk=10000
cache.default.diskPersistent=false
cache.default.diskExpiryThreadIntervalSeconds=600

#
#
# Key under the ServletContext that the configuration is stored.
#
KEY_CONFIGURATION    =config
KEY_CONTEXT         =context

#
#Cookie name under which the cookie for sendJmsMessage (action) is stored
#
WEB_JMSCOOKIE_NAME   	=sendJmsMessage
#
#Cookie name under which the cookie for sendIfsaMessage (action) is stored
#
WEB_IFSACOOKIE_NAME   	=sendIfsaMessage
#
#Cookie name under which the cookie for browseQueue (action) is stored
#
WEB_QBROWSECOOKIE_NAME=WEB_QBROWSECOOKIE
#
#Cookie name under which the cookie for ExecuteJdbcQuery (action) is stored
#
WEB_EXECJDBCCOOKIE_NAME   	=executeJdbcQuery
#
#Cookie name under which the cookie for browseJdbcTable (action) is stored
#
WEB_JDBCBROWSECOOKIE_NAME   	=browseJdbcTable

# indicates wether (with loglevel debug) the results between calling pipes have to be logged.
log.logIntermediaryResults=true

# The number of messages displayed in browsers, e.g. for the errorStorage and messageLog
browse.messages.max = 100
browse.messages.order = DESC
browse.errors.order = ASC

# control parameters for accessing JdbcTransactionalStorage
jdbc.storage.useIndexHint=false
jdbc.storage.useFirstRowsHint=true
jdbc.storage.useParameters=true
jdbc.storage.assumePrimaryKeyUnique=true
jdbc.storage.checkTable=true
jdbc.storage.checkIndices=true

jdbc.dateFormat=yyyy-MM-dd
jdbc.timestampFormat=yyyy-MM-dd HH:mm:ss

jdbc.convertFieldnamesToUppercase=false

# the path where the logging can be found, respectively the wildcard for log-files
logging.path=${log.dir}
logging.wildcard=*
logging.showdirectories=true
logging.items.max=500

#
# Class boundaries for StatisticsKeeper. [milliseconds]
Statistics.boundaries=100,1000,2000,10000
#
# Class boundaries for SizeStatisticsKeeper. [bytes]
Statistics.size.boundaries=100000,1000000

#
# Percentiles for StatisticsKeeper.
Statistics.percentiles=50,90,95,98

# number of days statistics are kept on the filesystem
statistics.retention=42
# cron pattern to be used by dump statistics
statistics.cron=0 45 23 * * ?

statistics.size=true

# cron pattern to be used by cleanup the database
cleanup.database.cron=0 45 1 * * ?

# cron pattern to be used by cleanup the file system
cleanup.filesystem.cron=0 35 1 * * ?

cleanup.log.dir.retention=60d

# cron pattern to be used by recover adapters
recover.adapters.interval=300000

checkReload.interval=60000

xml.namespaceAware.default=false
xslt.auto.reload=false
xslt.bufsize=4096

xmlValidator.warn=true
# When true don't initialize validators at startup (initialize validator when it
# is called for the first time)
xmlValidator.lazyInit=false
# Maximum number of validators to keep initialized after which the least recent
# used validator will be reset and needs to be initialized again when it is
# called. A low value will result in more initialization calls (hence more CPU
# usage and less performance). A high value will result in more initialized
# objects being held in memory (hence more memory usage). A value of -1 will
# keep all validators initialized 
xmlValidator.maxInitialised=-1

# perform validation of the configuration using AdapterFramework.xsd
validate.configuration=false

jms.connectionsArePooled=true
jms.sessionsArePooled=true
jms.useSingleDynamicReplyQueue=false
# IF (jms.connectionsArePooled==true) THEN jms.useSingleDynamicReplyQueue=false
jms.createDestination=false
jms.useJms102=false

# In case your JMS still uses v102, use this property in combination with jms.useJms102
jms.messageListenerClassName=org.springframework.jms.listener.DefaultMessageListenerContainer
#jms.messageListenerClassName=org.springframework.jms.listener.DefaultMessageListenerContainer102


jms.cleanUpOnClose=true
ifsa.cleanUpOnClose=false

# set fxf.version to 'auto' for automatic version detection
# alternatively set to '1' or '2'
fxf.version=auto

jta.userTransactionUrl1=java:comp/UserTransaction
jta.userTransactionUrl2=jta/usertransaction

# Monitoring is now deprecated. It's usage is mostly replaced by log management
# tools like Splunk and Logstash. When monitoring is enabled keep in mind that
# it will cause OutOfMemory exceptions after a number of configuration reloads.
monitoring.enabled=false
galm.stage=DEV
galm.source=${instance.name}
#monitor.adapter=nl.nn.adapterframework.monitoring.GalmMonitorAdapter

otap.stage=xxx
otap.side=xxx

query.includeFieldDefinition.default=true

# Enable ${instance.name.lc}-messages.log (see Adapter.msgLogLevel also)
msg.log.level.default=terse
# Log the length of the message instead of the content of the message (see Adapter.msgLogHidden also)
msg.log.hidden.default=true

# Optionally override keys to log on listener level with <listener xPathLoggingKeys="conversationId,testId" ... /> (see JmsListenerBase.xPathLoggingKeys also)
msg.log.keys=conversationId
# Define xPath for key conversationId
msg.log.xPath.conversationId=*[local-name()='Envelope']/*[local-name()='Header']/*[local-name()='MessageHeader']/*[local-name()='HeaderFields']/*[local-name()='ConversationId']

sec.log.includeMessage=false

adapter.message.max.size=1000

message.size.warn.default=3MB

# size limit for the response body of a HTTP method; when exceeded a warning message is logged
response.body.size.warn.default=128KB

# perform stubbing of the configuration for Larva Test Tool
stub4testtool.configuration=false

# Larva Test Tool properties to use when deviating from default settings (in TestTool.java)
#larva.javasource.directory=${webapp.realpath}/../resources
#larva.configuration.directory=${webapp.realpath}/../Configuration
#larva.windiff.command=${webapp.realpath}/../../../../IbisAlgemeenWasbak/WinDiff/WinDiff.Exe
#larva.diffs.autosave=true

# optionally use a custom configuration for the Ladybug Test Tool
ibistesttool.custom=
# maximum number of checkpoints per report
ibistesttool.maxCheckpoints=2500
# report transformation xslt
ibistesttool.reportTransformation=TestTool/xsl/Default.xsl
# file storage related properties
#ibistesttool.maxFileSize=1MB
#ibistesttool.maxBackupIndex=9
ibistesttool.regexFilter=^(?!Pipeline WebControl).*

force.fixed.forwarding.default=false

messageLog.check=true
messageLog.count.show=true
errorStore.count.show=true

#
# Definitions for the FileViewerServlet
#

# a comma-separated list of words that will be marked
FileViewerServlet.signal=ERROR,WARN,INFO,DEBUG

FileViewerServlet.signal.ERROR.pre=<font color="red">
FileViewerServlet.signal.ERROR.post=</font>
FileViewerServlet.signal.WARN.pre=<font color="orange">
FileViewerServlet.signal.WARN.post=</font>
FileViewerServlet.signal.INFO.pre=<font color="blue">
FileViewerServlet.signal.INFO.post=</font>
FileViewerServlet.signal.DEBUG.pre=<font color="green">
FileViewerServlet.signal.DEBUG.post=</font>

# indication of stylesheet to use
FileViewerServlet.signal.css=ie4.css

FileViewerServlet.permission.rules=* * allow

browseJdbcTable.permission.rules=* * allow

showConfiguration.original=false

adapterServiceWatchedDirectory=

adapterServiceCheckRateInSeconds=60

ldap.auth.mode=None
ldap.auth.dev.url=
ldap.auth.tst.url=
ldap.auth.acc.url=
ldap.auth.prd.url=
ldap.auth.user.base=
ldap.auth.observer.base=
ldap.auth.dataadmin.base=

manageDatabase.active=true
manageDatabase.webServiceListener.active=false
checkReload.active=false

flow.adapter.dir=${log.dir}/flow/adapter
flow.config.dir=${log.dir}/flow/config
# Add property 'flow.create.url' for HttpSender to generate flow diagrams for IBIS console on start up

#
# RESTFUL Etag Caching
#

# Type of cache to be used. (memcached,ehcache) NOTE: Ehcache is local (stateful)
etag.cache.type=ehcache

# Url(s) of external caching mechanisms (space separated)
etag.cache.server=

# If applicable, authentication for the etag cache server
etag.cache.username=
etag.cache.password=

# Timeout for the etag precondition check
etag.cache.timeout=10

etag.ehcache.maxElementsInMemory=512
etag.ehcache.memoryStoreEvictionPolicy=LRU
etag.ehcache.eternal=false
etag.ehcache.overflowToDisk=false
etag.ehcache.maxElementsOnDisk=10000
etag.ehcache.dir=${cache.dir}
etag.ehcache.diskPersistent=false
etag.ehcache.diskExpiryThreadIntervalSeconds=600


########## INTERACTIVE CONSOLE ##########
# Activates the new IBIS API + GUI3.0
iaf-api.enabled=true
iaf-api.hateoasImplementation=default
console.active=${iaf-api.enabled}

#How often the interactive frontend should poll the IAF API for new data
console.pollerInterval=3000

#How often the interactive frontend should poll during IDLE state
console.idle.pollerInterval=18000

#After x seconds the interactive console goes into 'IDLE' state, in the idle state the console changes it's polling interval
#Use 0 to disable this functionality
console.idle.time=300

#After x seconds of inactivity the user will be forcefully logged out
#Use 0 to disable this functionality
console.idle.timeout=0

#Time format in which to display the time and date.
console.dateFormat=yyyy-MM-dd HH:mm:ss

#Feedback URL to be used
console.feedbackURL=https://ibissource.org/iaf/feedback/