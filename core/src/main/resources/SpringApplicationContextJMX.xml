<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	default-autowire="byName"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	">

	<bean name="adapterJmxProcessor" class="org.frankframework.jmx.JmxAdapterWrapper" parent="adapterLifecycleWrapper"/>

	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<property name="locateExistingServerIfPossible" value="true" /><!-- indicate to first look for a server -->
		<property name="defaultDomain" value="${management.endpoints.jmx.domain}" />
		<property name="agentId" value="${management.endpoints.jmx.agentId}" /> <!-- an empty string forces the PlatformMbeanServer to be used -->
	</bean>

	<bean id="namingStrategy" class="org.frankframework.jmx.JmxNamingStrategy">
		<property name="defaultDomain" value="${management.endpoints.jmx.domain}" />
	</bean>

	<bean name="MBeanManager" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<property name="namingStrategy" ref="namingStrategy" />
		<property name="server" ref="mbeanServer"/>
		<property name="ensureUniqueRuntimeObjectNames" value="false" />
		<property name="assembler">
			<bean class="org.frankframework.jmx.JmxMBeanInfoAssembler" />
		</property>
		<property name="registrationPolicy" value="REPLACE_EXISTING"/>
	</bean>

</beans>
