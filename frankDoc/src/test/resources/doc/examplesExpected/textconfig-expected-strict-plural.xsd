<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="Start">
    <xs:annotation>
      <xs:documentation>nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Start</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="StartType">
          <xs:attribute ref="active" />
          <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Start" use="prohibited" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Module">
    <xs:annotation>
      <xs:documentation>Root element for file you include as entity reference. Does not influence the behavior of your Frank config.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="StartPluralConfigChildGroup" />
      <xs:attribute ref="active" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="StartType">
    <xs:group ref="StartPluralConfigChildGroup" />
  </xs:complexType>
  <xs:group name="StartPluralConfigChildGroup">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded" />
        <xs:group ref="AElementGroup" />
        <xs:element name="P" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:group name="AElementGroup">
    <xs:choice>
      <xs:element name="A">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:group ref="BElementGroup" />
              <xs:element name="Q" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
            </xs:choice>
          </xs:sequence>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="AElementGroupBase" />
      <xs:group ref="AElementGroupBase_2" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroup">
    <xs:choice>
      <xs:element name="B">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="BElementGroupBase" />
      <xs:group ref="BElementGroupBase_2" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroupBase">
    <xs:choice>
      <xs:element name="GrandChild1ImplB">
        <xs:annotation>
          <xs:documentation>GrandChild1ImplB - nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.GrandChild1Impl used as B</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="GrandChild1ImplType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.GrandChild1Impl" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="GrandChild1ImplType" />
  <xs:group name="BElementGroupBase_2">
    <xs:choice>
      <xs:element name="GrandChild2ImplB">
        <xs:annotation>
          <xs:documentation>GrandChild2ImplB - nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.GrandChild2Impl used as B</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="GrandChild2ImplType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.GrandChild2Impl" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="GrandChild2ImplType" />
  <xs:group name="AElementGroupBase">
    <xs:choice>
      <xs:element name="Child1ImplA">
        <xs:annotation>
          <xs:documentation>Child1ImplA - nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Child1Impl used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Child1ImplType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Child1Impl" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="Child1ImplType">
    <xs:group ref="Child1ImplPluralConfigChildGroup" />
  </xs:complexType>
  <xs:group name="Child1ImplPluralConfigChildGroup">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="BElementGroup" />
        <xs:element name="Q" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:group name="AElementGroupBase_2">
    <xs:choice>
      <xs:element name="Child2ImplA">
        <xs:annotation>
          <xs:documentation>Child2ImplA - nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Child2Impl used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Child2ImplType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.textconfig.plural.Child2Impl" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="Child2ImplType" />
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="\!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>