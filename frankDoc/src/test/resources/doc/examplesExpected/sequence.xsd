<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="Master">
    <xs:annotation>
      <xs:documentation>nl.nn.adapterframework.frankdoc.testtarget.examples.sequence.Master - We test here that the sequence of groups, config children and attributes is right.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="MasterType">
          <xs:attribute ref="active" />
          <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.examples.sequence.Master" use="prohibited" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Module">
    <xs:annotation>
      <xs:documentation>Root element for file you include as entity reference. Does not influence the behavior of your Frank config.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="MasterDeclaredChildGroup" />
      <xs:attribute ref="active" />
    </xs:complexType>
  </xs:element>
  <xs:element name="RoleEpsilon">
    <xs:annotation>
      <xs:documentation>nl.nn.adapterframework.frankdoc.testtarget.examples.sequence.Opaque</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute ref="active" />
      <xs:attribute name="elementRole" type="xs:string" fixed="roleEpsilon" use="prohibited" />
      <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.examples.sequence.Opaque" use="prohibited" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="MasterType">
    <xs:group ref="MasterDeclaredChildGroup" />
    <xs:attributeGroup ref="MasterDeclaredAttributeGroup" />
  </xs:complexType>
  <xs:group name="MasterDeclaredChildGroup">
    <xs:sequence>
      <xs:element ref="Module" minOccurs="0" maxOccurs="unbounded" />
      <xs:group ref="RoleAlphaElementGroup" minOccurs="0" maxOccurs="1" />
      <xs:group ref="RoleBetaElementGroup" minOccurs="0" maxOccurs="1" />
      <xs:element ref="RoleEpsilon" minOccurs="0" maxOccurs="1" />
      <xs:group ref="RoleDeltaElementGroup" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>
  <xs:group name="RoleAlphaElementGroup">
    <xs:choice>
      <xs:element name="RoleAlpha">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="roleAlpha" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="RoleAlphaElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="RoleAlphaElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:group name="RoleBetaElementGroup">
    <xs:choice>
      <xs:element name="RoleBeta">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="roleBeta" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="RoleBetaElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="RoleBetaElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:group name="RoleDeltaElementGroup">
    <xs:choice>
      <xs:element name="RoleDelta">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="roleDelta" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="RoleDeltaElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="RoleDeltaElementGroupBase">
    <xs:choice />
  </xs:group>
  <xs:attributeGroup name="MasterDeclaredAttributeGroup">
    <xs:attribute name="clemens" type="xs:string" />
    <xs:attribute name="arnold" type="xs:string" />
    <xs:attribute name="dennis" type="xs:string" />
    <xs:attribute name="bernhard" type="xs:string" />
  </xs:attributeGroup>
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="\!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>