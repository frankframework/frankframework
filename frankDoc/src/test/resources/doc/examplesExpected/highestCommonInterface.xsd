<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="Master">
    <xs:annotation>
      <xs:documentation>nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.Master</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="AElementGroup" minOccurs="0" maxOccurs="unbounded" />
        <xs:group ref="BElementGroup" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attribute ref="active" />
      <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.Master" use="prohibited" />
    </xs:complexType>
  </xs:element>
  <xs:group name="AElementGroup">
    <xs:choice>
      <xs:element name="A">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="AElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="AElementGroupBase">
    <xs:choice>
      <xs:element name="MyA">
        <xs:annotation>
          <xs:documentation>MyA - nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.MyListener used as A</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="MyListenerType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="a" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.MyListener" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:complexType name="MyListenerType" />
  <xs:group name="BElementGroup">
    <xs:choice>
      <xs:element name="B">
        <xs:complexType>
          <xs:attribute ref="active" />
          <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
          <xs:attribute name="className" type="xs:string" use="required" />
          <xs:anyAttribute processContents="skip" />
        </xs:complexType>
      </xs:element>
      <xs:group ref="BElementGroupBase" />
    </xs:choice>
  </xs:group>
  <xs:group name="BElementGroupBase">
    <xs:choice>
      <xs:element name="MyB">
        <xs:annotation>
          <xs:documentation>MyB - nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.MyListener used as B</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="MyListenerType">
              <xs:attribute ref="active" />
              <xs:attribute name="elementRole" type="xs:string" fixed="b" use="prohibited" />
              <xs:attribute name="className" type="xs:string" fixed="nl.nn.adapterframework.frankdoc.testtarget.highest.common.interfc.MyListener" use="prohibited" />
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:simpleType name="frankBoolean">
    <xs:restriction base="xs:string">
      <xs:pattern value="(true|false)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="frankInt">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\+|-)?[0-9]+)|($\{[^\}]+\})" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="active">
    <xs:annotation>
      <xs:documentation>If defined and empty or false, then this element and all its children are ignored</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:pattern value="\!?(($\{[^\}]+\})|([tT][rR][uU][eE])|([fF][aA][lL][sS][eE]))" />
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:simpleType name="variableRef">
    <xs:restriction base="xs:string">
      <xs:pattern value="$\{[^\}]+\}" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>