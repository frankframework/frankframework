<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ibis-adapterframework-docker-as-was</artifactId>
	<name>Frank!Framework Docker image for WebSphere</name>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.ibissource</groupId>
		<artifactId>ibis-adapterframework-docker-as</artifactId>
		<version>${revision}</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-ear</artifactId>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-test</artifactId>
			<version>${project.version}</version>
			<classifier>resources</classifier>
		</dependency>
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-test</artifactId>
			<version>${project.version}</version>
			<classifier>configurations</classifier>
		</dependency>
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-test</artifactId>
			<version>${project.version}</version>
			<classifier>scenarios</classifier>
		</dependency>
		<dependency>
			<groupId>${oracle.driver.groupid}</groupId>
			<artifactId>ojdbc${oracle.driver.jdkversion}</artifactId>
			<version>${oracle.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>${mssql.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>
			<version>${db2.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>${mongodb.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-jms-client-all</artifactId>
			<version>${artemis.driver.version}</version>
		</dependency>
		<!-- required for ActiveMQ classic-->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<version>${activemq.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.fusesource.hawtbuf</groupId>
			<artifactId>hawtbuf</artifactId>
			<version>1.11</version>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<excludeTransitive>true</excludeTransitive>
							<stripVersion>true</stripVersion>
							<excludeClassifiers>full-configuration,scenarios</excludeClassifiers>
						</configuration>
					</execution>
					<execution>
						<id>copy-configuration</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.ibissource</groupId>
									<artifactId>ibis-adapterframework-test</artifactId>
									<classifier>full-configuration</classifier>
									<destFileName>configurations.jar</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/dependencies/frank/configuration</outputDirectory>
							<stripVersion>true</stripVersion>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
					<execution>
						<id>unpack-tests</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.ibissource</groupId>
									<artifactId>ibis-adapterframework-test</artifactId>
									<classifier>scenarios</classifier>
								</artifactItem>
							</artifactItems>
							<excludeTransitive>true</excludeTransitive>
							<outputDirectory>${project.build.directory}/dependencies/frank/testtool</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>unpack-secrets</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.ibissource</groupId>
									<artifactId>ibis-adapterframework-test</artifactId>
									<classifier>secrets</classifier>
									<excludes>META-INF/</excludes>
								</artifactItem>
							</artifactItems>
							<excludeTransitive>true</excludeTransitive>
							<outputDirectory>${project.build.directory}/dependencies/secrets</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-as-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/configuration</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-package</id>
						<phase>package</phase>
						<inherited>false</inherited>
						<configuration>
							<target>
								<exec executable="docker" failonerror="true">
									<arg value="build"/>
									<arg value="-t"/>
									<arg value="iaf-test-as-websphere"/>
									<arg value="."/>
								</exec>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
