# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

env:
  PROFILES: ibissource,codecoverage,cmis,attachFrankDoc
  USE_PROPRIETARY: ${{ (github.event_name != 'pull_request' || github.event.pull_request.head.repo.owner.login == 'ibissource') && github.actor != 'dependabot[bot]' }}
on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+-release'
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.txt"
      - "**.png"
      - "**.toml"
      - ".github/**"
      - "docker/**"
      - "webapp/src/main/webapp/iaf/**"
  pull_request:
    branches:
      - master
      - '[0-9]+.[0-9]+-release'
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.txt"
      - "**.png"
      - "**.toml"
      - ".github/**"
      - "docker/**"
      - "webapp/src/main/webapp/iaf/**"

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ '8', '11' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Cache local Maven repository
      uses: actions/cache@v3
      env:
        cache-name: cache-maven-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}

    - name: Create Maven settings.xml file
      if: ${{ env.USE_PROPRIETARY == 'true' }}
      uses: s4u/maven-settings-action@v2.3.0
      with:
        servers: '[{"id": "proprietary", "username": "${{ secrets.CI_USER }}", "password": "${{ secrets.CI_PASS }}"}]'

    - name: Update maven profiles
      if: ${{ env.USE_PROPRIETARY == 'true' }}
      run: |
        echo "PROFILES=${{ env.PROFILES }},proprietary" >> $GITHUB_ENV

    - name: Build with Maven
      env:
        CI_SERVICE: GITHUB
        TZ: Europe/Amsterdam
        JAVA_OPTS: "-Xms1G -XX:+UseParallelGC"
        jdk11: true # allows the use of the JDK11 profile, when running JDK11
      run: mvn -B -V -T1 package -P${{env.PROFILES}}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      continue-on-error: true #ignore failure when unable to upload the artifacts

    - name: Upload coverage to Codacy
      if: ${{ env.USE_PROPRIETARY == 'true' }}
      uses: codacy/codacy-coverage-reporter-action@v1
      continue-on-error: true #ignore failure when unable to upload the artifacts
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

    - name: Store Test Results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: Surefire
        path: ${{ github.workspace }}/*/target/surefire-reports/*

    - name: Store FrankDoc XSD
      uses: actions/upload-artifact@v2
      with:
        name: FrankDoc
        path: ${{ github.workspace }}/target/frankdoc/xml/xsd/*.xsd

    - name: Print commit sha
      shell: bash
      env:
        COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      run: |
        echo "sha: $COMMIT_SHA"

    - name: Call [Compare Frank!Doc] workflow
      uses: benc-uk/workflow-dispatch@v1
      if: ${{ matrix.java == '8' && github.event_name == 'pull_request_disabled'}}
      with:
        workflow: Compare FrankDoc
        token: ${{ secrets.PAT }}
        inputs: '{"target": "${{ github.event.pull_request.head.sha }}"}'
