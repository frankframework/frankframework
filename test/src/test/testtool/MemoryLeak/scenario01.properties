scenario.description = Hello world with large file
scenario.active=${MemoryLeak.active}

ijs.MemoryLeak.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.MemoryLeak.serviceName = ibis4test-MemoryLeak

ijs.CreateLargeFile.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.CreateLargeFile.serviceName = ibis4test-CreateLargeFile

ijs.DeleteLargeFile.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.DeleteLargeFile.serviceName = ibis4test-DeleteLargeFile

ijs.GetStartTimeStamp.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.GetStartTimeStamp.serviceName = ibis4test-GetStartTimeStamp

ijs.GetEndTimeStamp.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.GetEndTimeStamp.serviceName = ibis4test-GetEndTimeStamp

ijs.CompareDuration.className   = nl.nn.adapterframework.senders.IbisJavaSender
ijs.CompareDuration.serviceName = ibis4test-CompareDuration

# The file name to be used to append content is specified in the adapter
step1.ijs.CreateLargeFile.write  = scenario01/dummy.txt
step2.ijs.CreateLargeFile.read  = scenario01/result.txt

# The file name to be used to append content is specified in the adapter
step3.ijs.GetStartTimeStamp.write  = scenario01/dummy.txt
step4.ijs.GetStartTimeStamp.read  = scenario01/result.txt

#step1.ijs.MemoryLeak.write  = ${log.dir}/input_big.xml
#step2.ijs.MemoryLeak.read   = ${log.dir}/input_big.xml

# Process scenario
step5.ijs.MemoryLeak.write  = ${log.dir}/input_big.xml
step6.ijs.MemoryLeak.read   = ${log.dir}/input_big.xml
step7.ijs.MemoryLeak.write  = ${log.dir}/input_big.xml
step8.ijs.MemoryLeak.read   = ${log.dir}/input_big.xml
step9.ijs.MemoryLeak.write  = ${log.dir}/input_big.xml
step10.ijs.MemoryLeak.read   = ${log.dir}/input_big.xml
step11.ijs.MemoryLeak.write  = ${log.dir}/input_big.xml
step12.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step13.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step14.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step15.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step16.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step17.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step18.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step19.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step20.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step21.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step22.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml
step23.ijs.MemoryLeak.write = ${log.dir}/input_big.xml
step24.ijs.MemoryLeak.read  = ${log.dir}/input_big.xml

# The file to be deleted is specified in the adapter
step25.ijs.DeleteLargeFile.write  = scenario01/dummy.txt
step26.ijs.DeleteLargeFile.read  = scenario01/dummy.txt

# Get End Time Stamp 
step27.ijs.GetEndTimeStamp.write  = scenario01/dummy.txt
step28.ijs.GetEndTimeStamp.read  = scenario01/result.txt

# Compare actual duration with expected duration
step29.ijs.CompareDuration.write  = scenario01/dummy.txt
step30.ijs.CompareDuration.read  = scenario01/result.txt

