scenario.description = Test larva jms natively - send jms message
scenario.active=${active.jms}

include = common.properties

java.JmsFFSender.className=org.frankframework.jms.JmsSender
java.JmsFFSender.queue=jms/i4testiaf_ff
java.JmsFFSender.queueConnectionFactoryName=${jms.connectionfactory.qcf}
java.JmsFFSender.destinationName=${jms.destination.i4testiaf_ff}
java.JmsFFSender.param1.name=SOURCE
java.JmsFFSender.param1.value=${hostname}_larva_ff_out
java.JmsFFSender.convertExceptionToMessage=true

step1.java.XmlJmsBrowserSender.write = common/remove-in.xml
step2.java.XmlJmsBrowserSender.read = common/remove-out.xml
step3.manage.db.write = common/md-delete-in.xml
step4.manage.db.read = common/md-delete-out.xml

## JmsSender does not have a read action
step5.java.JmsFFSender.write = scenario01/in.xml
step6.java.JmsFFSender.read = ignore

## Receive / read the message sent by the FF Adapter
step7.java.listener.read = scenario01/out.xml
step8.java.listener.writeline = not-important

## Verify nothing is left on the Queue
step9.java.XmlJmsBrowserSender.write = common/browse-in.xml
step10.java.XmlJmsBrowserSender.read = common/browse-out.xml