scenario.description = Test larva jms natively - receive jms message
scenario.active=${active.jms}

include = common.properties

java.JmsFFListener.className=org.frankframework.jms.JmsListener
java.JmsFFListener.queue=jms/i4testiaf_ff
java.JmsFFListener.queueConnectionFactoryName=${jms.connectionfactory.qcf}
java.JmsFFListener.destinationName=${jms.destination.i4testiaf_ff}
java.JmsFFListener.param1.name=SOURCE
java.JmsFFListener.param1.value=${hostname}_larva_ff_in
java.JmsFFListener.convertExceptionToMessage=true

step1.java.XmlJmsBrowserSender.write=common/remove-in.xml
step2.java.XmlJmsBrowserSender.read=common/remove-out.xml
step3.manage.db.write=common/md-delete-in.xml
step4.manage.db.read=common/md-delete-out.xml

## JmsSender does not have a read action
step5.java.FFsender.write=scenario02/in.xml
step6.java.FFsender.read=ignore

step7.java.delaySender.writeline=delay
step8.java.delaySender.read=ignore

step9.java.JmsFFListener.read=scenario02/out.xml

## Verify nothing is left on the Queue
step10.java.XmlJmsBrowserSender.write=common/browse-in.xml
step11.java.XmlJmsBrowserSender.read=common/browse-out.xml