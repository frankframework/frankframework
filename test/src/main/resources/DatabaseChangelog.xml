<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

<!-- When using one of the following commands, a rollback script is not required
AddColumn
AddDefaultValue
AddForeignKeyConstraint
AddLookupTable
AddNotNullConstraint
AddPrimaryKey
AddUniqueConstraint
CreateIndex
CreateSequence
CreateTable
CreateView
DropNotNullConstraint
RenameColumn
RenameTable
RenameView
TagDatabase
-->
 	<changeSet id="UPDATE IBIS PROP TABLE" author="Niels Meijer">
 		<comment>For some reason oracle is a bit silly so we cant update?</comment>
		<dropColumn tableName="IBISPROP" columnName="LASTMODBY"/>
		<addColumn tableName="IBISPROP">
			<column name="LASTMODBY" type="java.sql.Types.VARCHAR(100)"/>
		</addColumn>
 	</changeSet>

	<changeSet id="Cleanup IBISTEMP" author="Gerrit van Brakel">
		<preConditions onFail="MARK_RAN"><tableExists tableName="IBISTEMP"/></preConditions>
		<dropTable tableName="IBISTEMP"/>
 	</changeSet>

	<changeSet id="IBISTEMP" author="Gerrit van Brakel">
		<comment>Add IBISTEMP Table</comment>
		<createTable tableName="IBISTEMP">
			<column name="TKEY" type="INT" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" primaryKeyName="PK_IBISTEMP"/>
			</column>
			<column name="TINT" type="INT"/>
			<column name="TCHAR" type="CHAR"/>
			<column name="TVARCHAR" type="java.sql.Types.VARCHAR(100)"/>
			<column name="TNUMBER" type="java.sql.Types.DECIMAL(17, 5)"/>
			<column name="TDATETIME" type="DATETIME"/>
			<column name="TTIMESTAMP" type="TIMESTAMP"/>
			<column name="TDATE" type="DATE"/>
			<column name="TTIME" type="TIME"/>
			<column name="TBLOB" type="LONGBLOB"/>
			<column name="TCLOB" type="CLOB"/> <!-- is set as LONGTEXT for MySQL and MariaDB -->
		</createTable>
		<modifySql dbms="mssql" >
			<replace replace="IDENTITY (1, 1)" with=""/> <!-- required to be able to use/test SQL translation -->
		</modifySql>
	</changeSet>

	<changeSet id="IBISTEMP_SEQ" author="Robert Karajev" onValidationFail="MARK_RAN">
		<comment>Set sequence for IBISTEMP Table</comment>
		<createSequence sequenceName="SEQ_IBISTEMP" startValue="56789"/>
	</changeSet>

	<changeSet id="IAF_Util:8" author="Niels Meijer">
		<comment>Add IBISFILETRIGGER Table</comment>
		<createTable tableName="IBISFILETRIGGER">
			<column name="ID" type="BIGINT" autoIncrement="true">
				<constraints primaryKey="true" nullable="false" primaryKeyName="PK_IBISFILETRIGGER" />
			</column>
			<column name="MESSAGEID" type="java.sql.Types.VARCHAR(256)">	<!-- uniquely identifying the content of the file -->
				<constraints unique="true" uniqueConstraintName="UQ_IBISFILETRIGGER_MESSAGEID" nullable="false" />
			</column>
			<column name="FILENAME" type="java.sql.Types.VARCHAR(100)" />	<!-- name of the file that will be processed -->
			<column name="FILEURI" type="java.sql.Types.VARCHAR(256)" >			<!-- canonical name of the file points to the location of the file in the filesystem-->
				<constraints unique="true" uniqueConstraintName="UQ_IBISFILETRIGGER_URI" nullable="false" />
			</column>
			<column name="CREATED_AT" type="DATETIME" />
			<column name="FILESIZE" type="INTEGER" />
			<column name="FLOWID" type="java.sql.Types.VARCHAR(100)" />
			<column name="MESSAGE" type="java.sql.Types.VARCHAR(1000)" />	<!-- an xml that contains information about the file and the flow. An example can be found in src\test\testtool\ManagedFileHandler\scenario01\message.xml -->
			<column name="STATUS" type="java.sql.Types.CHAR(1)" />	<!-- status of the record. Statuses A,I,P,E,H mean AVAILABLE, INPROCESS, PROCESSED, ERROR and HOLD respectively -->
			<column name="UPDATED_AT" type="DATETIME" />
		</createTable>
		<createIndex tableName="IBISFILETRIGGER" indexName="IX_IBISFILETRIGGER"> <!-- supposed to be used when the table listener's select query is being executed -->
			<column name="STATUS"/>
			<column name="CREATED_AT"/>
		</createIndex>
		<createSequence sequenceName="SEQ_IBISFILETRIGGER" startValue="1"/>
	</changeSet>

	<changeSet id="Enlarge IBISTEMP Size" author="Tim van der Leeuw">
		<modifyDataType tableName="IBISTEMP" columnName="TVARCHAR" newDataType="varchar(200)"/>
	</changeSet>

	<!--
		When stored procedures need to be changed, or new stored procedures added,
		do not forget to add or modify them for all supported databases and please
		add to existing changesets to keep everything together (runOnChange=true for these changeSets).

		Existing stored procedure versions will be modified in place.
	-->
	<changeSet id="IAF-Test StoredProcedures PostgreSQL" author="Tim van der Leeuw" runOnChange="true" dbms="postgresql">
		<comment>Stored Procedures for PostgreSQL</comment>
		<sql>
			CREATE OR REPLACE PROCEDURE INSERT_SIMPLE_NO_RETURN(
				NMBR INTEGER,
				VCHR VARCHAR(200)
			) LANGUAGE SQL
			BEGIN ATOMIC
				INSERT INTO IBISTEMP(TINT, TVARCHAR) VALUES (NMBR, VCHR);
			END;
		</sql>
		<sql>
			CREATE OR REPLACE PROCEDURE COUNT_MESSAGES(
				VCHR VARCHAR(200),
				CNT OUT INTEGER
			) LANGUAGE SQL
			BEGIN ATOMIC
				SELECT COUNT(*) CNT FROM IBISTEMP WHERE TVARCHAR = VCHR;
			END;
		</sql>

		<rollback>
			<sql>
				DROP PROCEDURE IF EXISTS INSERT_SIMPLE_NO_RETURN;
				DROP PROCEDURE IF EXISTS COUNT_MESSAGES;
			</sql>
		</rollback>
	</changeSet>

	<changeSet id="IAF-Test StoredProcedures MySQL and MariaDB" author="Tim van der Leeuw" runOnChange="true" dbms="mysql,mariadb">
		<comment>Stored Procedures for MySQL and MariaDB</comment>
		<createProcedure
				procedureName="INSERT_SIMPLE_NO_RETURN"
				replaceIfExists="true"
		>
			CREATE PROCEDURE INSERT_SIMPLE_NO_RETURN(
				NMBR INTEGER,
				VCHR VARCHAR(200)
			) LANGUAGE SQL
			BEGIN
				INSERT INTO IBISTEMP(TINT, TVARCHAR) VALUES (NMBR, VCHR);
			END;
		</createProcedure>
		<createProcedure
				procedureName="COUNT_MESSAGES"
				replaceIfExists="true"
		>
			CREATE PROCEDURE COUNT_MESSAGES(
				VCHR VARCHAR(200),
				OUT CNT INTEGER
			) LANGUAGE SQL
			BEGIN
				SELECT COUNT(*) INTO CNT FROM IBISTEMP WHERE TVARCHAR = VCHR;
			END;
		</createProcedure>
		<rollback>
			<sql>
				DROP PROCEDURE IF EXISTS INSERT_SIMPLE_NO_RETURN;
				DROP PROCEDURE IF EXISTS COUNT_MESSAGES;
			</sql>
		</rollback>
	</changeSet>

	<changeSet id="IAF-Test StoredProcedures MS SQL" author="Tim van der Leeuw" runOnChange="true" dbms="mssql">
		<comment>Stored Procedures for MS SQL Server</comment>
		<createProcedure>
			CREATE OR ALTER PROCEDURE INSERT_SIMPLE_NO_RETURN(
				@NMBR INT,
				@VCHR VARCHAR(200)
				) AS
			BEGIN
				INSERT INTO IBISTEMP(TKEY, TINT, TVARCHAR) VALUES (NEXT VALUE FOR SEQ_IBISTEMP, @NMBR, @VCHR);
			END;
		</createProcedure>
		<createProcedure>
			CREATE OR ALTER PROCEDURE COUNT_MESSAGES(
				@VCHR VARCHAR(200),
				@CNT INTEGER OUT
			) AS
			BEGIN
				SELECT @CNT = COUNT(*) FROM IBISTEMP WHERE TVARCHAR = @VCHR;
			END;
		</createProcedure>
		<rollback>
			<sql>
				DROP PROCEDURE IF EXISTS INSERT_SIMPLE_NO_RETURN;
				DROP PROCEDURE IF EXISTS COUNT_MESSAGES;
			</sql>
		</rollback>
	</changeSet>

	<changeSet id="IAF-Test StoredProcedures DB2" author="Tim van der Leeuw" runOnChange="true" dbms="db2">
		<comment>Stored Procedures for DB2</comment>
		<createProcedure>
			CREATE OR REPLACE PROCEDURE INSERT_SIMPLE_NO_RETURN(
				NMBR INTEGER,
				VCHR VARCHAR(200)
			) LANGUAGE SQL
			BEGIN
				INSERT INTO IBISTEMP(TINT, TVARCHAR) VALUES (NMBR, VCHR);
			END;
		</createProcedure>
		<createProcedure>
			CREATE OR REPLACE PROCEDURE COUNT_MESSAGES(
				VCHR VARCHAR(200),
				OUT CNT INTEGER
			) LANGUAGE SQL
			BEGIN
				SELECT COUNT(*) INTO CNT FROM IBISTEMP WHERE TVARCHAR = VCHR;
			END;
		</createProcedure>
		<rollback>
			<sql>
				DROP PROCEDURE INSERT_SIMPLE_NO_RETURN;
				DROP PROCEDURE COUNT_MESSAGES;
			</sql>
		</rollback>
	</changeSet>

	<changeSet id="IAF-Test StoredProcedures Oracle" author="Tim van der Leeuw" runOnChange="true" dbms="oracle">
		<comment>Stored Procedures for Oracle</comment>
		<createProcedure>
			CREATE OR REPLACE PROCEDURE INSERT_SIMPLE_NO_RETURN(
				NMBR INTEGER,
				VCHR VARCHAR
			) AS
			BEGIN
				INSERT INTO IBISTEMP(TINT, TVARCHAR) VALUES (NMBR, VCHR);
			END;
		</createProcedure>
		<createProcedure>
			CREATE OR REPLACE PROCEDURE COUNT_MESSAGES(
				VCHR VARCHAR,
				CNT OUT INTEGER
			) AS
			BEGIN
				SELECT COUNT(*) INTO CNT FROM IBISTEMP WHERE TVARCHAR = VCHR;
			END;
		</createProcedure>
		<rollback>
			<sql>
				DROP PROCEDURE INSERT_SIMPLE_NO_RETURN;
				DROP PROCEDURE COUNT_MESSAGES;
			</sql>
		</rollback>
	</changeSet>
</databaseChangeLog>
