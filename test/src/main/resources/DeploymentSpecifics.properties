#
# In this file, all information is stored that are specific for this
# instance of the Frank!Framework.
#
# The values in this file override the values in AppConstants.properties

# the name of this instance of the Frank!Framework
instance.name=Ibis4Test

jdbc.migrator.active=true
jdbc.convertFieldnamesToUppercase=true
jdbc.sqlDialect=Oracle

jdbc.dbms.default=h2
#jdbc.dbms.default=oracle
#jdbc.dbms.default=oracle-xa
#jdbc.dbms.default=mssql
#jdbc.dbms.default=mysql
#jdbc.dbms.default=mariadb
#jdbc.dbms.default=postgres
#jdbc.dbms.default=postgres-xa
#jdbc.dbms.default=db2
#jdbc.dbms.default=db2-xa

#When running DB2 XA, the REORG command does not work.
#jdbc.migrator.datasource=jdbc/ibis4test-db2

jdbc.datasource.default=jdbc/${instance.name.lc}-${jdbc.dbms.default}

# reduce database reload interval to once per hour, to avoid the log filling (unnecessarily) with check reload messages.
checkReload.interval=3600000

#jms.provider.default=tibco_esb
#jms.provider.default=activemq
jms.provider.default=mq
#jms.provider.default=aws_sqs
jms.testdynamicreplyqueues=${active.jms}

jms.connectionfactory.qcf=${jms.connectionfactory.qcf.${jms.provider.default}}
jms.connectionfactory.fxf=${jms.connectionfactory.fxf.${jms.provider.default}}

jms.connectionfactory.qcf.tibco_esb=jms/qcf_tibco_esb_ff
jms.connectionfactory.qcf.activemq=jms/qcf-activemq
jms.connectionfactory.qcf.artemis=jms/qcf-artemis
jms.connectionfactory.qcf.mq=jms/qcf
jms.connectionfactory.qcf.aws_sqs=jms/qcf-aws_sqs

jms.connectionfactory.fxf.tibco_esb=jms/qcf_tibco_esb_ff
jms.connectionfactory.fxf.activemq=jms/qcf-activemq
jms.connectionfactory.fxf.artemis=jms/qcf-artemis
jms.connectionfactory.fxf.mq=jms/qcf_fxf
jms.connectionfactory.fxf.aws_sqs=jms/qcf-aws_sqs

jms.destination.prefix.tibco_esb=jms/
jms.destination.prefix.activemq=jms/
jms.destination.prefix.artemis=jms/
jms.destination.prefix.mq=jms/
jms.destination.prefix.aws_sqs=
jms.destination.prefix=${jms.destination.prefix.${jms.provider.default}}

# Defaults to empty, exists because both ActiveMQ and Artemis are configured simultaneously on JBoss and WildFly.
jms.destination.suffix=

jms.destination.i4testiaf_ff=${jms.destination.prefix}i4testiaf_ff${jms.destination.suffix}
jms.destination.i4testiaf_in=${jms.destination.prefix}i4testiaf_in${jms.destination.suffix}
jms.destination.i4testiaf_out=${jms.destination.prefix}i4testiaf_out${jms.destination.suffix}
jms.destination.fxf=${jms.destination.prefix}fxf_request

msg.log.xPath.value=/test/value

tibco.style=direct
#tibco.style=proxied

tibco.rr_queue=${tibco.${tibco.style}.rr_queue}
tibco.ff_queue=${tibco.${tibco.style}.ff_queue}

tibco.direct.rr_queue=ESB.Infrastructure.TS.Test.TestIAF.1.GetMessage.1.Request
tibco.direct.ff_queue=ESB.Infrastructure.TS.Test.TestIAF.1.UpdateMessage.1.Action

tibco.proxied.rr_queue=jms/GetMessageRequest
tibco.proxied.ff_queue=jms/UpdateMessageAction

transactionmanager.log.dir=${log.dir}/transactionlogs/${instance.name.lc}${transactionmanager.log.subdir${application.server.type.custom}}

transactionmanager.log.subdir=
transactionmanager.log.subdirNARAYANA=/narayana

manageDatabase.serviceName=ibis4test-ManageDatabase
manageDatabaseWrapper.serviceName=ibis4test-ManageDatabaseWrapper
manageFileSystem.serviceName=ibis4test-ManageFileSystem
uploadFile-jl.serviceName=ibis4test-UploadFile

configurations.names=${instance.name},MainConfig,HTTP,UTIL,TX,JDBC,JMS,FileHandling,SAP
# Test non-standard location on classpath (configurations is usually not included) and test different combinations of configurationFile and basePath
configurations.MainConfig.configurationFile=configurations/MainConfig/Configuration.xml
configurations.HTTP.configurationFile=configurations/HTTP/Configuration.xml
configurations.UTIL.configurationFile=Configuration.xml
configurations.UTIL.basePath=configurations/UTIL/
configurations.TX.configurationFile=configurations/TX/Configuration.xml
configurations.JDBC.configurationFile=configurations/JDBC/Configuration.xml
configurations.JDBC.basePath=configurations/JDBC/
#configurations.JMS.configurationFile=configurations/JMS/Configuration.xml
configurations.JMS.basePath=configurations/JMS/
configurations.FileHandling.configurationFile=configurations/FileHandling/Configuration.xml
configurations.SAP.basePath=configurations/SAP/

# Application ID.
applicationId=FF4TEST
application.name=IAF_ds
browse.messages.max=90

FXF_init=D:/Data/lib/fxf_init.bat
tt.dir=${log.dir}/testtool
#i4ti.dir=${log.dir}/${instance.name.lc}
testdata.dir=${log.dir}/testdata
fxf.dir=${testdata.dir}/fxf

# Please mark that the backslashes below are double escaped: first for the value of the property, second time for use in regular expression
log.dir.match=(?i)([cd]:[\\\\/]temp)|(${log.dir})
testdata.dir.match=((${log.dir.match})[\\\\/]testdata)|(${testdata.dir})

warnings.suppress.unsafeAttribute=true


#Default http!!!
web.host=localhost
web.port=8080
web.protocol=http
web.contextpath=/iaf-test
#web.contextpath=${instance.name.lc}

# active.authentication controls CredentialFactory related tests:
# The operation of the CredentialFactory via authAlias is tested with org.frankframework.pipes.CredentialCheckingPipe
# The operation of expanding credentials in properties like ${credential:password:testalias}
# For these tests to be successful, a CredentialFactory needs to be configured in the application server.
# The supplied credentials in 'credentials.properties' can be used by setting the following system properties:
# credentialFactory.class=org.frankframework.credentialprovider.FileSystemCredentialFactory
# credentialFactory.filesystem.root=<path to your sources root>/test/src/main/secrets
# authAliases.expansion.allowed=testalias
active.authentication=true
test.alias=testalias

# org.frankframework.jms.JmsListener / org.frankframework.jms.JmsSender / org.frankframework.extensions.esb.EsbJmsListener
active.jms=true

active.aws.sqs=false

# org.frankframework.extensions.fxf.FxfListener
active.fxf=false

# org.frankframework.extensions.esb.EsbJmsListener / org.frankframework.extensions.esb.EsbJmsSender
# N.B. active.tibco=true requires active.jms=true
active.tibco=false

active.mongodb=false

# setting false avoids access to required library that is not available in the current version of RedHat: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15'
active.javascript-extended=true

active.sap=false
# org.frankframework.extensions.sap.SapListener / org.frankframework.extensions.sap.SapSender
# In order to use SAP locally your ip needs to be whitelisted on the SAP gateway!

# Whether to activate scenario's which test the whoami-command
active.whoami=false

# if testing happens on non-local machines (without internet access), set the following on false:
active.ExternalWebserviceCall=false

# set to true to test for multithreaded transaction behaviour
active.multithreaded-transactions=false


proxy.host=
proxy.port=
proxy.username=
proxy.password=

#check.esbJmsListeners.cron=0 0/1 * * * ?
#check.esbJmsListeners.idleTimeout=60

# Delay
delay.time=3000

# NEW GUI3.0
console.pollerInterval = 10000
console.idle.time=0

#Suppressed console warnings
warnings.suppress.deprecated=true
warnings.suppress.transaction.ApiListener_SimpleInsertWithTransactedException=true
warnings.suppress.transaction.TransactionHandlingMandatorySubAdapter=true
warnings.suppress.transaction.TransactionHandlingRequiredSubAdapterThrowException=true
warnings.suppress.transaction.TransactionHandlingMultiAdapterRequiredThrowException=true
warnings.suppress.sqlInjections.JdbcSenders=true
warnings.suppress.sqlInjections.ResultSetIteratingPipeTest=true
warnings.suppress.sqlInjections.BlockEnabledDirectQuerySender=true
warnings.suppress.sqlInjections.QuerySender=true
warnings.suppress.sqlInjections.XmlQuerySender=true
warnings.suppress.sqlInjections.ResultSetIteratingPipe=true

#Automated Larva tests settings (that run directly after startup)
larva.adapter.active=true
larva.adapter.writeToLog=true
larva.adapter.writeToSystemOut=false
larva.adapter.execute=
larva.adapter.mail.active=true
larva.adapter.scheduler.active=true
testsendmail.adapter.active=false
smtp.host=

ladybug.adapter.active=false
ladybug.adapter.scheduler.active=false
ladybug.adapter.scheduler.cron=0 45 2 * * ?


active.soap12=false

jdbc.querylistener.key=260873
jdbc.blockenabledsenders.key=260902
jdbc.receivertest.key=260877

#Memory Leak Scenario
CreateLargeFile.active=false
MemoryLeak.active=false

#needs a comma separated list with mailaddresses for the larva adapter
errorreport.mailaddresses.pass=
errorreport.mailaddresses.fail=


# provide the following properties to enable the exchange listener
exchangemail.active=false
exchangemail.url=https://outlook.office365.com/EWS/Exchange.asmx
exchangemail.mailAddress=
exchangemail.authAlias=
exchangemail.username=
exchangemail.password=
exchangemail.baseFolder=IafTest
exchangemail.inputFolder=InputExchange
exchangemail.inProcessFolder=InProcess
exchangemail.processedFolder=Done
exchangemail.errorFolder=Error
exchangemail.logFolder=Log

imapmail.active=false
imapmail.host=outlook.office365.com
imapmail.port=993
imapmail.authAlias=
imapmail.username=
imapmail.password=
imapmail.baseFolder=IafTest
imapmail.inputFolder=InputImap
imapmail.inProcessFolder=InProcess
imapmail.processedFolder=Done
imapmail.errorFolder=Error
imapmail.logFolder=Log

# configure an alias when you want to run the scenarios in secure mode
framework.api.user.alias=

# run the following scenarios in single-threaded /sequential mode.
larva.parallel.blacklistDirs=MessageStoreSenderAndListener,QuerySender,Receivers,BlockEnabledSenders,TransactionHandling,BatchFileTransformerPipe,JdbcListener
