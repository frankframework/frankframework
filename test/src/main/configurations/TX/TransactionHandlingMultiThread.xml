<module>
	<adapter
		name="TransactionHandlingMultiThread"
		description="Adapter for testing transaction handling over multipe threads"
	>
		<receiver>
			<listener
				className="nl.nn.adapterframework.receivers.JavaListener"
				name="TransactionHandlingMultiThread"
				serviceName="ibis4test-TransactionHandlingMultiThread"
			/>
		</receiver>

		<pipeline>
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			
			<pipe name="prepare">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="TransactionHandlingMultiThread-Prepare" />
			</pipe>

			<pipe name="action" getInputFromSessionKey="originalMessage">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="TransactionHandlingMultiThread-Work" />
			</pipe>

			<pipe name="selectFromIbisTemp">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="SELECT TCHAR FROM IBISTEMP WHERE TKEY=999" queryType="select" scalar="true" />
			</pipe>
		</pipeline>
	</adapter>
	
	<adapter name="TransactionHandlingMultiThread-Work" >
		<receiver>
			<listener
				className="nl.nn.adapterframework.receivers.JavaListener"
				name="TransactionHandlingMultiThread-Work"
				throwException="false"
			/>
		</receiver>
		<errorMessageFormatter className="nl.nn.adapterframework.errormessageformatters.XslErrorMessageFormatter" xpathExpression="/errorMessage/@message" />

		<pipeline transactionAttribute="RequiresNew" transactionTimeout="10">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			<pipe name="firstUpdate" >
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='b' WHERE TKEY=999" />
			</pipe>

			<pipe name="switch" className="nl.nn.adapterframework.pipes.XmlSwitch" getInputFromSessionKey="originalMessage" xpathExpression="*/@branch" />

			<pipe name="update">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='c' WHERE TKEY=999" />
				<forward name="success" path="EXIT" />
			</pipe>
			
			<pipe name="updateFromOtherThread">
				<sender className="nl.nn.adapterframework.senders.ParallelSenders">
					<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='c' WHERE TKEY=999 AND TCHAR='b'" />
				</sender>
				<forward name="success" path="EXIT" />
			</pipe>
			
			<pipe name="updateFromMultipleOtherThreads">
				<sender className="nl.nn.adapterframework.senders.ParallelSenders">
					<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='c' WHERE TKEY=999 AND TCHAR='b'" />
					<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='c' WHERE TKEY=999 AND TCHAR='b'" />
					<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="UPDATE IBISTEMP SET TCHAR='c' WHERE TKEY=999 AND TCHAR='b'" />
				</sender>
				<forward name="success" path="EXIT" />
			</pipe>
			
			<pipe name="rollback">
				<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="TransactionHandlingMultiThread-Sub-Rollback" />
				<forward name="success" path="EXIT" />
			</pipe>

			<pipe name="rollbackFromOtherThread">
				<sender className="nl.nn.adapterframework.senders.ParallelSenders">
					<sender className="nl.nn.adapterframework.senders.IbisLocalSender" javaListener="TransactionHandlingMultiThread-Sub-Rollback" />
				</sender>
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	
	
	<adapter name="TransactionHandlingMultiThread-Sub-Rollback" >
		<receiver>
			<listener
				className="nl.nn.adapterframework.receivers.JavaListener"
				name="TransactionHandlingMultiThread-Sub-Rollback"
				throwException="false"
			/>
		</receiver>
		<errorMessageFormatter className="nl.nn.adapterframework.errormessageformatters.XslErrorMessageFormatter" xpathExpression="/errorMessage/@message" />

		<pipeline transactionAttribute="Required" transactionTimeout="10">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			<pipe name="rollbackInSub">
				<sender className="nl.nn.adapterframework.senders.XsltSender" styleSheetNameSessionKey="nonExistent" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	
	<adapter name="TransactionHandlingMultiThread-Prepare" >
		<receiver>
			<listener
				className="nl.nn.adapterframework.receivers.JavaListener"
				name="TransactionHandlingMultiThread-Prepare"
				throwException="false"
			/>
		</receiver>
		<errorMessageFormatter className="nl.nn.adapterframework.errormessageformatters.XslErrorMessageFormatter" xpathExpression="/errorMessage/@message" />

		<pipeline transactionAttribute="Required" transactionTimeout="10">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			<pipe name="deleteFromIbisTemp" >
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="DELETE FROM IBISTEMP WHERE TKEY=999" />
			</pipe>
			<pipe name="insertIntoIbisTemp">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="INSERT INTO IBISTEMP (TKEY,TCHAR) VALUES (999,'a')" />
			</pipe>

		</pipeline>
	</adapter>
</module>
