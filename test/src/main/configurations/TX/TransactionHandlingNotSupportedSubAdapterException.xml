<module>
	<adapter
		name="TransactionHandlingNotSupportedSubAdapterException"
		description="Adapter for testing transaction handling, multiple adapters are being called with different transaction attributes"
	>
		<receiver
			transactionTimeout="2"
			transactionAttribute="Required"
		>
			<listener
				className="org.frankframework.receivers.JavaListener"
				name="TransactionHandlingMultiAdapter"
				serviceName="ibis4test-TransactionHandlingNotSupportedSubAdapterException"
			/>
			<errorStorage className="org.frankframework.jdbc.JdbcTransactionalStorage"
				slotId="${applicationId}/ReceiverTransactionHandlingNotSupportedSubAdapterException"
			/>
		</receiver>

		<pipeline firstPipe="Send transacted message to not supported subadapter with exception" transactionAttribute="Required">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>

			<!-- This subadapter throws an exception -->
			<!-- The outcome of this pipe should not influence the pipeline in any way since its not transacted-->
			<pipe name="Send transacted message to not supported subadapter with exception"
				className="org.frankframework.pipes.SenderPipe"
				getInputFromFixedValue="tralala"
			>
				<sender
					className="org.frankframework.senders.IbisLocalSender"
					javaListener="TransactionHandlingNotSupportedSubAdapterThrowException"
				/>
				<forward name="success" path="fixedInsert"/>
				<forward name="exception" path="fixedInsert"/>
			</pipe>

			<pipe name="fixedInsert" className="org.frankframework.pipes.SenderPipe" transactionAttribute="Required">
				<sender className="org.frankframework.jdbc.FixedQuerySender" query="INSERT INTO IBISPROP (NAME,VALUE,LASTMODDATE,LASTMODBY) VALUES ('LASTNAME',?,NULL,NULL)">
					<param name="value" value="test1" />
				</sender>
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>

	<adapter
		name="TransactionHandlingNotSupportedSubAdapterThrowException"
		description="First SubAdapter for Transaction Handling"
	>
		<receiver
			transactionAttribute="NotSupported"
		>
			<listener
				className="org.frankframework.receivers.JavaListener"
				name="TransactionHandlingNotSupportedSubAdapterThrowException"
			/>
		</receiver>

		<pipeline firstPipe="Return Exception" transactionAttribute="NotSupported">
			<exits>
				<exit path="EXIT" state="success" />
				<exit path="EXCEPTION" state="error" />
			</exits>

			<pipe name="Return Exception" className="org.frankframework.pipes.ExceptionPipe"
				getInputFromFixedValue="&lt;transacted&gt;exception&lt;/transacted&gt;">

				<forward name="success" path="EXIT"/>
				<forward name="exception" path="EXCEPTION"/>
			</pipe>
		</pipeline>
	</adapter>
</module>
