<module>
	<adapter name="HttpListener" description="Test the functioning of the HttpListener">
		<receiver>
			<listener className="nl.nn.adapterframework.http.HttpListener"
				serviceName="LocalHttpListener" />
		</receiver>
		<pipeline firstPipe="EchoPipe">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="EchoPipe" className="nl.nn.adapterframework.pipes.EchoPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="HttpSender" description="Test the functioning of the HttpSender">
		<receiver>
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="${web.contextpath}-HttpSender" />
		</receiver>
		<pipeline firstPipe="LocalHttp">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="LocalHttp">
				<sender className="nl.nn.adapterframework.http.HttpSender"
					methodType="POST"
					url="${web.protocol}://${web.host}:${web.port}${web.contextpath}/HttpListener?service=LocalHttpListener"
					firstBodyPartName="request"
					sharedResourceRef="SharedHttpSession"
				/>
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="HttpSenderAndBase64Pipe" description="Test the functioning of the HttpSender combined with Base64 encoded output">
		<receiver>
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="${web.contextpath}-HttpSenderWithBase64Encoding" />
		</receiver>
		<pipeline firstPipe="LocalHttp">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="LocalHttp">
				<sender className="nl.nn.adapterframework.http.HttpSender"
					methodType="POST"
					url="${web.protocol}://${web.host}:${web.port}${web.contextpath}/HttpListener?service=LocalHttpListener"
					firstBodyPartName="request"
					sharedResourceRef="SharedHttpSession"
				/>
			</pipe>
			<pipe name="Encode" className="nl.nn.adapterframework.pipes.Base64Pipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="HttpListenerTimeout">
		<receiver>
			<listener className="nl.nn.adapterframework.http.HttpListener"
				serviceName="LocalHttpListenerTimeout" />
		</receiver>
		<pipeline firstPipe="DelayPipe">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="DelayPipe" className="nl.nn.adapterframework.pipes.DelayPipe"
				delayTime="2000">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="HttpSenderTimeout">
		<receiver>
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="${web.contextpath}-HttpSenderTimeout" />
		</receiver>
		<pipeline firstPipe="LocalHttp">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="LocalHttp">
				<sender className="nl.nn.adapterframework.http.HttpSender"
					methodType="POST"
					url="${web.protocol}://${web.host}:${web.port}${web.contextpath}/HttpListener?service=LocalHttpListenerTimeout"
					firstBodyPartName="request"
					sharedResourceRef="SharedHttpSession"
				/>
				<forward name="timeout" path="error_timeout" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_timeout"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="TIMEOUT" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
</module>
