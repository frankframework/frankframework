<module>
	<adapter name="ApiListener_SimpleInsert">
		<receiver
			className="nl.nn.adapterframework.receivers.GenericReceiver"
			checkForDuplicates="true"
			processResultCacheSize="0"
			>
			<listener
				name="SimpleInsertListener"
				className="nl.nn.adapterframework.http.rest.ApiListener"
				uriPattern="insert"
				method="post"
			/>
			<messageLog className="nl.nn.adapterframework.jdbc.JdbcTransactionalStorage" jmsRealm="jdbc" slotId="ApiListenerDuplicateCheck" />
		</receiver>
		<pipeline transactionAttribute="Required">
			<exits>
				<exit state="success" path="EXIT" />
			</exits>

			<pipe name="FixedInsert" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="INSERT INTO IBISTEMP (tkey,tvarchar) VALUES (SEQ_IBISTEMP.NEXTVAL,?)" queryType="insert" jmsRealm="jdbc" >
					<param name="tvarchar" sessionKey="messageId" />
				</sender>
			</pipe>

			<pipe name="FixedResult" className="nl.nn.adapterframework.pipes.FixedResult" returnString="&lt;success/&gt;">
				<forward name="success" path="EXIT" />
			</pipe>

		</pipeline>
	</adapter>
	<adapter name="ApiListener_SimpleInsertWithTransactedException">
		<receiver
			className="nl.nn.adapterframework.receivers.GenericReceiver"
			checkForDuplicates="true"
			processResultCacheSize="0"
			transactionAttribute="Required"
			>
			<listener
				name="SimpleInsertListener"
				className="nl.nn.adapterframework.http.rest.ApiListener"
				uriPattern="transacted-exception"
				method="post"
			/>
			<messageLog className="nl.nn.adapterframework.jdbc.JdbcTransactionalStorage" jmsRealm="jdbc" slotId="ApiListenerDuplicateCheck" />
		</receiver>
		<pipeline transactionAttribute="Required">
			<exits>
				<exit state="success" path="EXIT" />
			</exits>

			<pipe name="FixedInsert" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="INSERT INTO IBISTEMP (tkey,tvarchar) VALUES (SEQ_IBISTEMP.NEXTVAL,?)" queryType="insert" jmsRealm="jdbc" >
					<param name="tvarchar" sessionKey="messageId" />
				</sender>
			</pipe>
			<pipe name="generateException" className="nl.nn.adapterframework.pipes.ExceptionPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="ApiListener_SimpleInsertWithException">
		<receiver
			className="nl.nn.adapterframework.receivers.GenericReceiver"
			checkForDuplicates="true"
			processResultCacheSize="0"
			>
			<listener
				name="SimpleInsertListener"
				className="nl.nn.adapterframework.http.rest.ApiListener"
				uriPattern="exception"
				method="post"
			/>
			<errorStorage className="nl.nn.adapterframework.jdbc.JdbcTransactionalStorage" jmsRealm="jdbc" slotId="ApiListenerDuplicateCheck-Errors"/>
			<messageLog className="nl.nn.adapterframework.jdbc.JdbcTransactionalStorage" jmsRealm="jdbc" slotId="ApiListenerDuplicateCheck" />
		</receiver>
		<pipeline transactionAttribute="Required">
			<exits>
				<exit state="success" path="EXIT" />
			</exits>

			<pipe name="FixedInsert" className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.jdbc.FixedQuerySender" query="INSERT INTO IBISTEMP (tkey,tvarchar) VALUES (SEQ_IBISTEMP.NEXTVAL,?)" queryType="insert" jmsRealm="jdbc" >
					<param name="tvarchar" sessionKey="messageId" />
				</sender>
			</pipe>
			<pipe name="generateException" className="nl.nn.adapterframework.pipes.ExceptionPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>

	<adapter name="CallApiListener">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver">
			<listener className="nl.nn.adapterframework.receivers.JavaListener" serviceName="ibis4test-CallApiListener" />
		</receiver>
		<pipeline firstPipe="callApiListener">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>

			<pipe name="callApiListener"
				className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe">
				<sender className="nl.nn.adapterframework.http.HttpSender"
					urlParam="url_param" methodType="post" resultStatusCodeSessionKey="statusCode">
					<param name="url_param" value="" /> <!-- use pipeline input -->
				</sender>
			</pipe>

			<pipe
				name="successOrException"
				className="nl.nn.adapterframework.pipes.XmlSwitch" sessionKey="statusCode">
				<forward name="200" path="EXIT" />
				<forward name="500" path="FixedResultOnException" />
			</pipe>

			<pipe name="FixedResultOnException" className="nl.nn.adapterframework.pipes.FixedResult" returnString="&lt;error/&gt;">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
</module>
