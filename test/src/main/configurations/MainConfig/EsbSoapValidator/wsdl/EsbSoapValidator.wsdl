<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:jms="http://www.w3.org/2010/soapjms/" xmlns:ibis="http://${wsdl.targetNamespace.domain}/EsbSoapValidator/wsdl/" xmlns:ns2="http://nn.nl/XSD/Generic/MessageHeader/1" xmlns:ns3="http://policymanagement.nn.nl/TestEsbValidator" xmlns:ns4="http://policymanagement.nn.nl/TestEsbValidator" xmlns:ns1="http://schemas.xmlsoap.org/soap/envelope/" targetNamespace="http://${wsdl.targetNamespace.domain}/EsbSoapValidator/wsdl/">
 <wsdl:documentation><![CDATA[Generated by org.frankframework.soap.Wsdl on Wed May 02 17:33:56 CEST 2012]]></wsdl:documentation>
 <wsdl:types>
  <xsd:schema xmlns="http://nn.nl/XSD/Generic/MessageHeader/1" targetNamespace="http://nn.nl/XSD/Generic/MessageHeader/1" attributeFormDefault="unqualified" elementFormDefault="qualified">
	<xsd:element name="MessageHeader" type="MessageHeaderType"/>
	<xsd:element name="Result" type="ResultType"/>
	<xsd:complexType name="MessageHeaderType">
		<xsd:sequence>
			<xsd:element name="From" type="ProducingEndpointType"/>
			<xsd:element name="To" type="ConsumingEndpointType"/>
			<xsd:element name="HeaderFields" type="HeaderFieldType"/>
			<xsd:element name="ConnectionInfo" type="ConnectionInfoType" minOccurs="0"/>
			<xsd:element name="Service" type="ServiceType"/>
			<xsd:element name="TraceHeaderList" type="TraceHeaderListType" minOccurs="0"/>
			<xsd:element name="TransactionList" type="TransactionListType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ProducingEndpointType">
		<xsd:sequence>
			<xsd:element name="Id" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Unique identification of the initiator.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Location" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Destination of the endpoint of the initiator. Use when discriminating the Id with an location is of importance.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ConsumingEndpointType">
		<xsd:sequence>
			<xsd:element name="Id" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Unique identification of the endpoint being invoked.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Location" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Destination of the endpoint being invoked.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="HeaderFieldType">
		<xsd:sequence>
			<xsd:element name="CPAId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Collaboration Protocol Agreement ID provided by the initiator of the business value chain of Transactions.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ConversationId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Global Unique IDdentifier (GUID) for the one particular Conversation a message participates in.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="MessageId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Global Unique Identifier (GUID) for this message within the scope of the Conversation (see above).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="CorrelationId" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Contains the request MessageId as part of the response in order to correlate two messages as part of the same MEP.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ExternalRefToMessageId" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Unique identifier referring to an id passed from an external (front-end) system. This often uniquely identifies the Transaction as known with the initiator.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Timestamp" type="xsd:dateTime">
				<xsd:annotation>
					<xsd:documentation>
						Date and time message was sent, including the time zone.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="HeaderProperties" type="PropertiesType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Used as extension on the HeaderFields for future use without backwards compatibility issues in existing implementations.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PropertiesType">
		<xsd:sequence>
			<xsd:element name="HeaderProperty" maxOccurs="unbounded" type="HeaderPropertyType">
				<xsd:annotation>
					<xsd:documentation>
						Repeating structure to accommodate extra properties
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="HeaderPropertyType">
		<xsd:attribute name="Name" use="required" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Attribute describing the name of the property
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="Value" use="required" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Attribute describing the value of the property
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ConnectionInfoType">
		<xsd:annotation>
			<xsd:documentation/>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Principal" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						ID or name of the front-end system or application
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="RemoteAddress" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						System name, Full Qualified Domain Name (FQDN) or IP address of the front-end system. Typically used for black-listing or for some investigation purposed.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ServiceType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The name of the service being invoked
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Context" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The name of the service context being invoked.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Action" type="ActionType">
				<xsd:annotation>
					<xsd:documentation>
						Identification of the action being performed
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ActionType">
		<xsd:sequence>
			<xsd:element name="Paradigm">
				<xsd:annotation>
					<xsd:documentation>
						Identification of the paradigm, can be Request, Response, Event, Action, Solicit, Notification
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Request"/>
						<xsd:enumeration value="Response"/>
						<xsd:enumeration value="Event"/>
						<xsd:enumeration value="Action"/>
						<xsd:enumeration value="Solicit"/>
						<xsd:enumeration value="Notification"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="Name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The name of the operation being invoked.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Version" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The major version of the operation being invoked.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TraceHeaderListType">
		<xsd:annotation>
			<xsd:documentation>
				The ԔraceHeaderListԠpart of the message is used to carry over parts of the header while invoking another operation or service. When a service is composed of multiple other services each header that is received will make up one element in the TraceHeaderList. A new TraceHeader entry is added to the bottom of the list. The newest entry is the lowest entry in a list.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="TraceHeader" maxOccurs="unbounded" type="TraceHeaderType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TraceHeaderType">
		<xsd:sequence>
			<xsd:element name="Sender" type="ProducingEndpointType">
				<xsd:annotation>
					<xsd:documentation>
						This is a copy of the From element
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Receiver" type="ConsumingEndpointType">
				<xsd:annotation>
					<xsd:documentation>
						This is a copy of the To element
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Service" type="ServiceType">
				<xsd:annotation>
					<xsd:documentation>
						This is a copy of the Service element
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="MessageData" type="MessageDataType">
				<xsd:annotation>
					<xsd:documentation>
						This element contains a copy of certain fields of the HeaderFields element
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MessageDataType">
		<xsd:sequence>
			<xsd:element name="MessageId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Unique Identifier for this message within the scope of the Conversation (see above). This is a copy of.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Timestamp" type="xsd:dateTime">
				<xsd:annotation>
					<xsd:documentation>
						Date and time message was sent, including the time zone. This is a copy of.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="RefToMessageId" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Unique identifier referring to an id passed from an external (front-end) system. This is a copy of.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Status" type="StatusType"/>
			<xsd:element name="Retry_Option" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						A boolean indicating if the invocation can be retried
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TransactionListType">
		<xsd:annotation>
			<xsd:documentation>
				The TransactionList part of the message holds information regarding the transaction the message is part of. This part should ONLY be used for SOx or other regulatory compliance requirements that have been identified for a certain service or system interface. A new Transaction entry is added to the bottom of the list. The newest entry is the lowest entry in a list.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Transaction" maxOccurs="unbounded" type="TransactionType">
				<xsd:annotation>
					<xsd:documentation>
						For each transaction a new Transaction is added to bottom of the TransactionList.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TransactionType">
		<xsd:sequence>
			<xsd:element name="Interaction">
				<xsd:annotation>
					<xsd:documentation>
						When a system is called that is not part of the ESB or SOA platform, this field will hold the value Frontend or Backend respective to the type of system that is called
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Frontend"/>
						<xsd:enumeration value="Backend"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="TransactionId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The unique identification used as reference when a Transaction enters or leaves the ESB.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="MessageId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The identification of the message. Must be unique within the TransactionList when multiple calls to external system
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="SystemId" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The unique identification of the external system
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Timestamp" type="xsd:dateTime">
				<xsd:annotation>
					<xsd:documentation>
						Date and time the message was sent to or received from the external system
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ResultType">
		<xsd:sequence>
			<xsd:element name="Status" type="StatusType"/>
			<xsd:element name="ErrorList" type="ErrorListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Element which is the parent of all errors elements. Will only be present if the status equals ERROR
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ErrorListType">
		<xsd:sequence>
			<xsd:element name="Error" maxOccurs="unbounded" type="ErrorType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ErrorType">
		<xsd:sequence>
			<xsd:element name="Code" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Canonical error code with fixed value.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Reason" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Canonical reason description of the canonical error. It provides the reason why an error has occurred.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Service" type="ServiceType">
				<xsd:annotation>
					<xsd:documentation>
						Description in which service and operation the error occurred.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DetailList" type="DetailListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						List of specific non canonical errors.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DetailListType">
		<xsd:sequence>
			<xsd:element name="Detail" maxOccurs="unbounded" type="DetailType"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DetailType">
		<xsd:sequence>
			<xsd:element name="Code" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Service specific error code
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="SubCode" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Application specific error code
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Text" type="TextType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Detailed description of the error that occurred.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TextType">
		<xsd:attribute name="language" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Detailing the language of the error based on ISO 639-1 Code.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="StatusType">
		<xsd:annotation>
			<xsd:documentation>
				A string indicating if the invocation was successful or not. The field may have the value OK or ERROR
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="OK"/>
			<xsd:enumeration value="ERROR"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://policymanagement.nn.nl/TestEsbValidator" targetNamespace="http://policymanagement.nn.nl/TestEsbValidator" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation>Version: 1.0. R0.1 </xs:documentation>
	</xs:annotation>
	<xs:element name="ServiceRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Body">
					<xs:complexType>
						<xs:all>
							<xs:element name="kenteken"/>
							<xs:element name="meldCode"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://policymanagement.nn.nl/TestEsbValidator" targetNamespace="http://policymanagement.nn.nl/TestEsbValidator" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation>Version: 1.0. R0.1</xs:documentation>
	</xs:annotation>
	<xs:element name="ServiceResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Body">
					<xs:complexType>
						<xs:all>
							<xs:element name="returnCode"/>
							<xs:element name="reasonCode"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
  <!-- Schema for the SOAP/1.1 envelope

Portions © 2001 DevelopMentor.
© 2001 W3C (Massachusetts Institute of Technology, Institut National de Recherche en Informatique et en Automatique, Keio University). All Rights Reserved.

This document is governed by the W3C Software License [1] as described in the FAQ [2].
[1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
[2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD
By obtaining, using and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions:

Permission to use, copy, modify, and distribute this software and its documentation, with or without modification,  for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the software and documentation or portions thereof, including modifications, that you make:

1.  The full text of this NOTICE in a location viewable to users of the redistributed or derivative work.

2.  Any pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, a short notice of the following form (hypertext is preferred, text is permitted) should be used within the body of any redistributed or derivative code: "Copyright © 2001 World Wide Web Consortium, (Massachusetts Institute of Technology, Institut National de Recherche en Informatique et en Automatique, Keio University). All Rights Reserved. http://www.w3.org/Consortium/Legal/"

3.  Notice of any changes or modifications to the W3C files, including the date changes were made. (We recommend you provide URIs to the location from which the code is derived.)

Original W3C files; http://www.w3.org/2001/06/soap-envelope
Changes made:
     - reverted namespace to http://schemas.xmlsoap.org/soap/envelope/
     - reverted mustUnderstand to only allow 0 and 1 as lexical values
	 - made encodingStyle a global attribute 20020825
	 - removed default value from mustUnderstand attribute declaration

THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS," AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.

COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.

The name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.

-->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" elementFormDefault="qualified">


  <!-- Envelope, header and body -->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0"/>
      <xs:element ref="tns:Body" minOccurs="1"/>
      <xs:any processContents="lax" maxOccurs="unbounded" namespace="##other" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax" namespace="##other"/>
  </xs:complexType>

  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any processContents="lax" maxOccurs="unbounded" namespace="##other" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax" namespace="##other"/>
  </xs:complexType>

  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any processContents="lax" maxOccurs="unbounded" namespace="##any" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax" namespace="##any">
	  <xs:annotation>
	    <xs:documentation>
		  Prose in the spec does not specify that attributes are allowed on the Body element
		</xs:documentation>
	  </xs:annotation>
	</xs:anyAttribute>
  </xs:complexType>


  <!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.  -->
  <xs:attribute name="mustUnderstand">
     <xs:simpleType>
     <xs:restriction base="xs:boolean">
	   <xs:pattern value="0|1"/>
	 </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>

  <xs:simpleType name="encodingStyle">
    <xs:annotation>
	  <xs:documentation>
	    'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification
	  </xs:documentation>
	</xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>

  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>

  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType final="extension" name="Fault">
    <xs:annotation>
	  <xs:documentation>
	    Fault reporting structure
	  </xs:documentation>
	</xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any processContents="lax" maxOccurs="unbounded" namespace="##any" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="lax" namespace="##any"/>
  </xs:complexType>

</xs:schema>
 </wsdl:types>
 <wsdl:message name="Header">
  <wsdl:part name="MessageHeader" element="ns2:MessageHeader"/>
 </wsdl:message>
 <wsdl:message name="PipeLineInput">
  <wsdl:part name="ServiceRequest" element="ns3:ServiceRequest"/>
 </wsdl:message>
 <wsdl:message name="PipeLineOutput">
  <wsdl:part name="ServiceResponse" element="ns3:ServiceResponse"/>
 </wsdl:message>
 <wsdl:portType name="PipeLine">
  <wsdl:operation name="Process">
   <wsdl:input message="ibis:PipeLineInput"/>
   <wsdl:output message="ibis:PipeLineOutput"/>
  </wsdl:operation>
 </wsdl:portType>
 <!--Binding: Unrecognized listener class org.frankframework.receivers.JavaListener: listener of [EsbSoapValidator]-->
 <!--Binding: Unrecognized listener class org.frankframework.receivers.JavaListener: listener of [EsbSoapValidator]-->
 <!--Service: Unrecognized listener class org.frankframework.receivers.JavaListener org.frankframework.receivers.JavaListener@1ba640-->
 <!--Service: Unrecognized listener class org.frankframework.receivers.JavaListener org.frankframework.receivers.JavaListener@4e37fb-->
</wsdl:definitions>
