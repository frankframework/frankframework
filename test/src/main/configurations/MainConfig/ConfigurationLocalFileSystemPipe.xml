<module>
	<adapter name="LocalFileSystemPipe" description="Test the functioning of the LocalFileSystemPipe">
		<receiver>
			<listener className="org.frankframework.receivers.JavaListener" serviceName="ibis4test-LocalFileSystemPipe" />
		</receiver>
		<pipeline firstPipe="setFilename">
			<exits>
				<exit name="EXIT" state="success" />
				<exit name="EXCEPTION" state="error" />
			</exits>

			<!-- Set FileName -->
			<pipe name="setFilename" className="org.frankframework.pipes.PutInSession" sessionKey="filename" value="${testdata.dir}/test1.txt" >
 			 <forward name="success" path="setFileData"/>
			</pipe>

			<!-- get file text from sample file -->
			<pipe name="setFileData" className="org.frankframework.pipes.FixedResultPipe" filename="/FixedResultPipe/sample.txt">
			  <forward name="success" path="write file"/>
			</pipe>

			<!-- Write file -->
			<pipe
				name="write file"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="write"
				overwrite="true"
	        	createFolder="true">
				<param name="filename" sessionKey="filename" />
	        	<forward name="success" path="switchAction"/>
				<forward name="exception" path="EXCEPTION"/>
	        </pipe>

			<!-- choose which action should be done -->
			<pipe name="switchAction" className="org.frankframework.pipes.XmlSwitch" xpathExpression="request/@action" getInputFromSessionKey="originalMessage"/>

			<!-- Read file / getInputFromSessionKey -->
			<pipe
				name="read file via getInputFromSessionKey"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="read"
	        	getInputFromSessionKey="filename">
	        	<forward name="success" path="EXIT"/>
	        </pipe>

			<!-- Read file / filenameSessionKey -->
			<pipe
				name="read file via filenameSessionKey"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="read">
				<param name="filename" sessionKey="filename" />
	        	<forward name="success" path="EXIT"/>
	        </pipe>

			<!-- Delete file with use of directory and filename -->
			<pipe
				name="delete file"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="delete"
	        	filename="${testdata.dir}/test1.txt"
	        	deleteEmptyFolder="true">
	        	<forward name="success" path="EXIT"/>
	        </pipe>

			<!-- Delete file by using a sessionKey -->
			<pipe
				name="delete file by using a sessionKey"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="delete">
				<param name="filename" sessionKey="filename" />
	        	<forward name="success" path="EXIT"/>
	        </pipe>

	        <!-- Delete file no directory no filename (input) -->
			<pipe
				name="delete file no directory no filename"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="delete"
	        	filename="${testdata.dir}/test1.txt">
	        	<forward name="success" path="EXIT"/>
	        </pipe>

			<!-- Delete file that does not exist with use of directory -->
			<pipe
				name="delete file that does not exist"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="delete"
	        	filename="${testdata.dir}/none_existing_file.txt">
	        	<forward name="success" path="EXIT"/>
				<forward name="exception" path="EXCEPTION"/>
	        </pipe>

			<!-- List files -->
			<pipe
				name="list files1"
				className="org.frankframework.pipes.LocalFileSystemPipe"
	        	action="list"
	        	wildcard="dummy1*.txt"
				inputFolder="${testdata.dir}">
	        	<forward name="success" path="EXIT"/>
	        </pipe>
			<pipe
				name="list files2"
				className="org.frankframework.pipes.LocalFileSystemPipe"
				action="list"
				wildcard="dummy2*.txt"
				inputFolder="${testdata.dir}">
				<forward name="success" path="EXIT"/>
			</pipe>

			<!-- Create file and info -->
			<pipe name="create file" className="org.frankframework.pipes.LocalFileSystemPipe"
				action="create"
				overwrite="true">
				<param name="filename" pattern="${testdata.dir}/{UUID}.txt"/>
				<forward name="success" path="info file" />
			</pipe>

			<pipe name="info file" className="org.frankframework.pipes.LocalFileSystemPipe"
				action="info">
				<param name="filename" xpathExpression="concat('${testdata.dir}/', /file/@name)"/>
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
</module>
