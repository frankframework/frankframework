<!-- This adapter creates a large file by reading and appending the content of a small file.
	 Adapter gets the JVM maxMemory and calculates how many times can append the file content in the SetEndIndex pipe. 
	 In the calculation 160 is substracted from the max memory this is the average expected memory the framework occupies. 
	 32 is the calculated common factor 
	 size of the file to be created - corresponding JVM max memory - expected duration(tested on the specified hardware CPU-Intel i7-7700HQ@2.8GHz ; RAM 8GB):

	 * 75MB - 4096M - 24 minutes
	 * 35MB - 2048M - 14 minutes
	 * 16MB - 1024M - 8 minutes
	 * 6MB  - 512M  - 5 minutes
 -->
<module>
	<adapter name="CreateLargeFile" active="${CreateLargeFile.active}"
		description="Creates a large file using a small by appending small file content multiple times">
		<receiver name="Java Receiver for Starstar"
			className="nl.nn.adapterframework.receivers.GenericReceiver">
			<listener name="Starstar"
				serviceName="ibis4test-CreateLargeFile"
				className="nl.nn.adapterframework.receivers.JavaListener" />
		</receiver>
		<pipeline firstPipe="ReadFile">
			<exits>
				<exit path="READY" state="success" />
			</exits>
			<pipe name="ReadFile"
				className="nl.nn.adapterframework.pipes.FixedResult"
				storeResultInSessionKey="fileContent"
				filename="CreateLargeFile/input_small.txt">
				<forward name="success" path="CreateFile" />
			</pipe>
			<pipe name="CreateFile" actions="create"
				className="nl.nn.adapterframework.pipes.FilePipe"
				directory="${log.dir}" filename="input_big.xml">
				<forward name="success" path="WriteFile" />
			</pipe>
			<pipe name="WriteFile" actions="write"
				className="nl.nn.adapterframework.pipes.FilePipe"
				directory="${log.dir}" getInputFromFixedValue="&lt;dummy&gt;"
				filename="input_big.xml">
				<forward name="success" path="SetStartIndex" />
			</pipe>
			<pipe name="SetStartIndex"
				className="nl.nn.adapterframework.pipes.PutInSession"
				sessionKey="index" getInputFromFixedValue="0">
				<forward name="success" path="GetHeapSize" />
			</pipe>
			<pipe name="GetHeapSize"
				className="nl.nn.adapterframework.pipes.IbisMetricsPipe"
				storeResultInSessionKey="metrics">
				<forward name="success" path="SetEndIndex" />
			</pipe>
			<pipe name="SetEndIndex"
				className="nl.nn.adapterframework.pipes.XsltPipe"
				getInputFromSessionKey="metrics"
				xpathExpression="floor((number(substring(processMetrics/properties/property[@name='maxMemory'], 0, string-length(processMetrics/properties/property[@name='maxMemory'])))-160) div 32)"
				sessionKey="endIndex">
				<forward name="success" path="AppendFile" />
			</pipe>
			<pipe name="AppendFile" actions="write_append"
				className="nl.nn.adapterframework.pipes.FilePipe"
				directory="${log.dir}" filename="input_big.xml"
				getInputFromSessionKey="fileContent">
				<forward name="success" path="IncrementIndex" />
			</pipe>
			<pipe name="IncrementIndex"
				className="nl.nn.adapterframework.pipes.IncreaseIntegerPipe"
				sessionKey="index">
				<forward name="success" path="CompareValues" />
			</pipe>
			<pipe name="AppendTag" actions="write_append"
				className="nl.nn.adapterframework.pipes.FilePipe"
				directory="${log.dir}" filename="input_big.xml"
				getInputFromFixedValue="&lt;/dummy&gt;">
				<forward name="success" path="IncrementIndex" />
			</pipe>
			<pipe name="CompareValues"
				className="nl.nn.adapterframework.pipes.CompareIntegerPipe"
				sessionKey1="index" sessionKey2="endIndex">
				<forward name="lessthan" path="AppendFile" />
				<forward name="equals" path="AppendTag" />
				<forward name="greaterthan" path="Echo" />
			</pipe>
			<pipe name="Echo"
				className="nl.nn.adapterframework.pipes.EchoPipe"
				getInputFromFixedValue="success">
				<forward name="success" path="READY" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="DeleteLargeFile"
		description="Deletes the created large file">
		<receiver name="Java Receiver for Starstar"
			className="nl.nn.adapterframework.receivers.GenericReceiver">
			<listener name="Starstar"
				serviceName="ibis4test-DeleteLargeFile"
				className="nl.nn.adapterframework.receivers.JavaListener" />
		</receiver>
		<pipeline firstPipe="DeleteFile">
			<exits>
				<exit path="READY" state="success" />
			</exits>
			<pipe name="DeleteFile" actions="delete"
				className="nl.nn.adapterframework.pipes.FilePipe"
				directory="${log.dir}" filename="input_big.xml">
				<forward name="success" path="READY" />
			</pipe>
		</pipeline>
	</adapter>
</module>