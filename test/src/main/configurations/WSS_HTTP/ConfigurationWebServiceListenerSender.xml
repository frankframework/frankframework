<module>
	<adapter name="WebServiceListener" description="Test the functioning of the WebServiceListener">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceListener">
			<listener className="nl.nn.adapterframework.http.WebServiceListener"
				name="urn:ws" />
		</receiver>
		<pipeline firstPipe="EchoPipe">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="EchoPipe" className="nl.nn.adapterframework.pipes.EchoPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceListenerError"
		description="Test the functioning of the WebServiceListener (error)">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceListenerError">
			<listener className="nl.nn.adapterframework.http.WebServiceListener"
				name="urn:ws_error" />
		</receiver>
		<pipeline firstPipe="ExceptionPipe">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="ExceptionPipe" className="nl.nn.adapterframework.pipes.ExceptionPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceListenerTimeout"
		description="Test the functioning of the WebServiceListener (timeout)">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceListenerTimeout">
			<listener className="nl.nn.adapterframework.http.WebServiceListener"
				name="urn:ws_timeout" />
		</receiver>
		<pipeline firstPipe="DelayPipe">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="DelayPipe" className="nl.nn.adapterframework.pipes.DelayPipe"
				delayTime="2000">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceSender" description="Test the functioning of the WebServiceSender">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceSender">
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="ibis4test-WebServiceSender" />
		</receiver>
		<pipeline firstPipe="Send2WS">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="Send2WS">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					namespaceDefs="ns1=${web.protocol}://www.ing.com/namespace1 ns2=${web.protocol}://www.ing.com/namespace2"
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceSenderError"
		description="Test the functioning of the WebServiceSender (error)">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceSenderError">
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="ibis4test-WebServiceSenderError" />
		</receiver>
		<pipeline firstPipe="Send2WS">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="Send2WS">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_error"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceSenderTimeoutGlobalForward"
		description="Test the functioning of the WebServiceSender in combination with global-forward">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceSenderTimeoutGlobalForward">
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="ibis4test-WebServiceSenderTimeoutGlobalForward" />
		</receiver>
		<pipeline firstPipe="SwitchAction">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<global-forwards>
				<forward name="exception" path="error_exception2" />
			</global-forwards>
			<pipe name="SwitchAction" className="nl.nn.adapterframework.pipes.XmlSwitch"
				xpathExpression="request/@action"></pipe>
			<!-- send2ws_no_forwards -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_no_forwards">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_forward_timeout -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_forward_timeout">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_timeout"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="TIMEOUT" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_exception"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="EXCEPTION" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_exception2"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="EXCEPTION2" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
	<adapter name="WebServiceSenderTimeout"
		description="Test the functioning of the WebServiceSender (timeout)">
		<receiver className="nl.nn.adapterframework.receivers.GenericReceiver"
			name="WebServiceSenderTimeout">
			<listener className="nl.nn.adapterframework.receivers.JavaListener"
				serviceName="ibis4test-WebServiceSenderTimeout" />
		</receiver>
		<pipeline firstPipe="SwitchAction">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="SwitchAction" className="nl.nn.adapterframework.pipes.XmlSwitch"
				xpathExpression="request/@action"></pipe>
			<!-- send2ws_no_forwards -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_no_forwards">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false"/>
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_forward_timeout -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_forward_timeout">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_forward_exception -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_forward_exception">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000"
					allowSelfSignedCertificates="true" verifyHostname="false"  />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_with_forwards -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_with_forwards">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_multiple_with_forwards -->
			<pipe className="nl.nn.adapterframework.pipes.ForEachChildElementPipe"
				name="send2ws_multiple_with_forwards" removeXmlDeclarationInResults="true">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_no_forwards_resultOnTimeOut -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_no_forwards_resultOnTimeOut" resultOnTimeOut="&lt;receiver_timed_out/&gt;">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_forward_timeout_resultOnTimeOut -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_forward_timeout_resultOnTimeOut" resultOnTimeOut="&lt;receiver_timed_out/&gt;">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_forward_exception_resultOnTimeOut -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_forward_exception_resultOnTimeOut" resultOnTimeOut="&lt;receiver_timed_out/&gt;">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<!-- send2ws_with_forwards_resultOnTimeOut -->
			<pipe className="nl.nn.adapterframework.pipes.GenericMessageSendingPipe"
				name="send2ws_with_forwards_resultOnTimeOut" resultOnTimeOut="&lt;receiver_timed_out/&gt;">
				<sender className="nl.nn.adapterframework.http.WebServiceSender"
					serviceNamespace="urn:ws_timeout"
					url="${web.protocol}://${web.host}:${web.port}/${web.contextpath}/servlet/rpcrouter"
					timeout="1000" 
					allowSelfSignedCertificates="true" verifyHostname="false" />
				<forward name="timeout" path="error_timeout" />
				<forward name="exception" path="error_exception" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_timeout"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="TIMEOUT" />
				<forward name="success" path="EXIT" />
			</pipe>
			<pipe className="nl.nn.adapterframework.pipes.XsltPipe" name="error_exception"
				styleSheetName="WebServiceListenerSender/copy.xsl">
				<param name="root" value="EXCEPTION" />
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
</module>
