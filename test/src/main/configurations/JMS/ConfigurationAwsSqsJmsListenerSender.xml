<module>
	<adapter name="AWS SQS JmsFFSender" description="Test the functioning of the JmsSender (FF)"
		active="${active.aws.sqs}">
		<receiver>
			<listener className="org.frankframework.receivers.JavaListener"
				serviceName="ibis4test-AwsSqsFFSender" />
		</receiver>
		<pipeline transactionAttribute="Required">
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="make unique message"
                  className="org.frankframework.pipes.ReplacerPipe"
				getInputFromFixedValue="&lt;msg mid=&quot;?{MID}&quot; action=&quot;?{ACTION}&quot; /&gt;">
				<param name="MID" sessionKey="mid" />
				<param name="ACTION" xpathExpression="request/@action" />
			</pipe>

			<!-- although the pipeline has transactionAttribute="Required", sending a message to AWS SQS is not  -->
			<pipe name="send2sqs"
				className="org.frankframework.pipes.SenderPipe">
				<sender className="org.frankframework.jms.JmsSender"
					queueConnectionFactoryName="jms/qcf-aws_sqs" destinationName="i4testiaf_ff">
					<param name="SOURCE" value="${hostname}_FF" />
				</sender>
				<messageLog className="org.frankframework.jdbc.JdbcTransactionalStorage"
					slotId="${applicationId}/AwsSqsJmsFFSender" />
			</pipe>
			<pipe name="switchAction" className="org.frankframework.pipes.XmlSwitch"
				xpathExpression="request/@action" getInputFromSessionKey="originalMessage"
				>
				<forward name="echo" path="EXIT" />
				<forward name="listenerException" path="EXIT" />
			</pipe>
			<pipe name="senderException" className="org.frankframework.pipes.ExceptionPipe">
				<forward name="success" path="EXIT" />
			</pipe>
 		</pipeline>
	</adapter>

	<adapter name="AWS SQS JmsFFListener" active="${active.aws.sqs}">
		<receiver name="JmsFFListener" maxRetries="1">
			<listener className="org.frankframework.jms.JmsListener" acknowledgeMode="client"
                      queueConnectionFactoryName="jms/qcf-aws_sqs" cacheMode="CACHE_CONSUMER"
                      destinationName="i4testiaf_ff"
                      useReplyTo="false" pollGuardInterval="-1" />
			<messageLog className="org.frankframework.jdbc.JdbcTransactionalStorage"
				slotId="${applicationId}/AwsSqsJmsFFListener" />
			<errorStorage className="org.frankframework.jdbc.JdbcTransactionalStorage"
				slotId="${applicationId}/AwsSqsJmsFFListener" />
		</receiver>
		<pipeline>
			<exits>
				<exit path="EXIT" state="success" />
				<exit path="ERROR" state="error" />
			</exits>
			<EchoPipe name="echo message" />
			<pipe name="switchAction" className="org.frankframework.pipes.XmlSwitch"
				xpathExpression="msg/@action" >
				<forward name="echo" path="EXIT" />
				<forward name="senderException" path="EXIT" />
				<forward name="listenerException" path="ERROR" />
			</pipe>
		</pipeline>
	</adapter>
</module>
