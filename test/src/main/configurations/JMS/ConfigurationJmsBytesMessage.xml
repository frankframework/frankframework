<module>
	<adapter name="JmsBytesMessageTest" description="Test the functioning of the JmsSender with binary message and listener embedded response sender"
			 active="${active.jms}">
		<receiver >
			<listener className="org.frankframework.receivers.JavaListener"
					  serviceName="ibis4test-JmsBytesSender" />
		</receiver>
		<pipeline>
			<exits>
				<exit path="EXIT" state="success" />
			</exits>

<!--			<pipe name="Load ZIP File"-->
<!--				  className="org.frankframework.pipes.LocalFileSystemPipe"-->
<!--				  action="read"-->
<!--				  filename="/configurations/JMS/BinaryData/test-data.zip">-->

<!--			</pipe>-->
			<!-- Read binary file as bytes -->
			<!-- Should ideally use LocalFileSystemPipe but cannot seem to get that working with classpath resources -->
			<pipe
					name="read binary file as bytes"
					className="org.frankframework.pipes.FilePipe"
					actions="read"
					outputType="bytes"
					getInputFromFixedValue="BinaryData/test-data.zip"
					fileSource="classpath">
			</pipe>
			<pipe name="Send Binary Message"
				  className="org.frankframework.pipes.SenderPipe"
				  storeResultInSessionKey="returnedMessage"
			>
				<sender className="org.frankframework.jms.JmsSender" messageClass="BYTES"
						jmsRealm="qcf" destinationName="${jms.destination.i4testiaf_in}" synchronous="true"
						replyToName="${jms.destination.i4testiaf_out}">
					<param name="SOURCE" value="${hostname}_I4TIAF_bytes1" />
				</sender>
			</pipe>

			<!--
				Response should be binary as well, validate correct sending and replying of binary
				JMS messages by unzipping the returned message and sending back the contents.
			 -->
			<pipe name="Extract From ZIP File"
				  className="org.frankframework.compression.ZipIteratorPipe"
				  streamingContents="false"
				  getInputFromSessionKey="returnedMessage"
			>
				<sender className="org.frankframework.senders.FixedResultSender"
						substituteVars="true" returnString="%{zipdata}"
						replaceFrom="%" replaceTo="$"
				/>
				<forward name="success" path="EXIT"/>
			</pipe>
		</pipeline>
	</adapter>

	<adapter name="JmsBinaryRRListener" description="Test the functioning of the JmsListener (RR) with BytesMessage"
			 active="${active.jms}">
		<receiver name="JmsRRListener for BytesMessage">
			<listener className="org.frankframework.jms.JmsListener" messageClass="BYTES"
					  destinationName="${jms.destination.i4testiaf_in}" jmsRealm="qcf"
					  forceMessageIdAsCorrelationId="true" messageSelector="SOURCE='${hostname}_I4TIAF_bytes1'">
			</listener>
		</receiver>
		<pipeline>
			<exits>
				<exit path="EXIT" state="success" />
			</exits>
			<pipe name="echo" className="org.frankframework.pipes.EchoPipe">
				<forward name="success" path="EXIT" />
			</pipe>
		</pipeline>
	</adapter>
</module>
