<?xml version="1.0" encoding="UTF-8"?>
<Context>
	<JarScanner scanClassPath="false" scanAllFiles="false" scanAllDirectories="false"/>

	<!-- 
		Support for XA using BTM requires JDBC datasources to be configured via
		factory="org.apache.naming.factory.BeanFactory" and a proper XADataSource classname.
		Configuration via driverClassName only works for the standard transaction manager.
	-->

	<!-- IbisProp table has a column named VALUE. VALUE is a keyword in h2 db. -->
	<Resource
		name="jdbc/ibis4test-h2"
		factory="org.apache.naming.factory.BeanFactory"
		type="org.h2.jdbcx.JdbcDataSource"
		URL="jdbc:h2:mem:ibis4test;NON_KEYWORDS=VALUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=0;"
	/>

	<Resource
		name="jdbc/ibis4test-oracle-xe"
		type="javax.sql.DataSource"
		driverClassName="oracle.jdbc.driver.OracleDriver"
		url="jdbc:oracle:thin:@localhost:1521:xe"
		username="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
		maxTotal="10"
		maxWaitMillis="5000"
	/>

	<Resource
		name="jdbc/ibis4test-oracle"
		factory="org.apache.naming.factory.BeanFactory"
		type="oracle.jdbc.xa.client.OracleXADataSource"
		URL="jdbc:oracle:thin:@${jdbc.hostname:-host.docker.internal}:1521:XE"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
	/>

	<Resource 
		name="jdbc/ibis4test-mssql" 
		auth="Container" 
		factory="org.apache.naming.factory.BeanFactory"
		type="com.microsoft.sqlserver.jdbc.SQLServerXADataSource"
		URL="jdbc:sqlserver://${jdbc.hostname:-host.docker.internal}:1433;database=testiaf"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
		sendStringParametersAsUnicode="false"
		sendTimeAsDatetime="true"
		selectMethod="direct"
		responseBuffering="adaptive"
		packetSize="4096"
		loginTimeout="10"
		lockTimeout="2000"
		lastUpdateCount="false"
		encrypt="false"
		disableStatementPooling="true"
		applicationName="iaf-test on TomCat"
		applicationIntent="readwrite"
	/>

	<!-- serverTimezone is set for docker instances -->
	<Resource
		name="jdbc/ibis4test-mysql"
		factory="org.apache.naming.factory.BeanFactory"
		type="com.mysql.cj.jdbc.MysqlXADataSource"
		URL="jdbc:mysql://${jdbc.hostname:-host.docker.internal}:3307/testiaf"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
		sslMode="DISABLED"
		serverTimezone="Europe/Amsterdam"
		allowPublicKeyRetrieval="true"
		pinGlobalTxToPhysicalConnection="true"
		socketTimeout="5000"
	/>

 	<!-- pinGlobalTxToPhysicalConnection appears to be required to avoid locking problems under XA -->

	<!-- Use MySQL driver for MariaDB for proper XA support. --> <!-- serverTimezone is set for docker instances -->
	<Resource
		name="jdbc/ibis4test-mariadb"
		factory="org.apache.naming.factory.BeanFactory"
		type="com.mysql.cj.jdbc.MysqlXADataSource"
		URL="jdbc:mysql://${jdbc.hostname:-host.docker.internal}:3306/testiaf"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
		sslMode="DISABLED"
		serverTimezone="Europe/Amsterdam"
		allowPublicKeyRetrieval="true"
		pinGlobalTxToPhysicalConnection="true"
		socketTimeout="5000"
	/>
<!-- 
	<Resource
		name="jdbc/ibis4test-mariadb"
		factory="org.apache.naming.factory.BeanFactory"
		type="org.mariadb.jdbc.MariaDbDataSource"
		user="testiaf_user"
		password="testiaf_user00"
		url="jdbc:mariadb://${jdbc.hostname:-host.docker.internal}:3306/testiaf?pinGlobalTxToPhysicalConnection=true"
	/>
 -->
 	<!-- pinGlobalTxToPhysicalConnection does not work the same for mariadb as it does for mysql, therefor still locking problems under XA for mariadb -->
	

	<Resource 
		name="jdbc/ibis4test-postgres-xa" 
		factory="org.apache.naming.factory.BeanFactory"
		type="org.postgresql.xa.PGXADataSource" 
		URL="jdbc:postgresql://${jdbc.hostname:-host.docker.internal}:5432/testiaf"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
	/>
	
	<!-- Postgres XA does not work without BTM/Narayana, gives ClassCastException casting the XA datasource to Java datasource, so add non-XA for those cases -->
	<Resource name="jdbc/ibis4test-postgres" auth="Container"
		type="javax.sql.DataSource" 
		driverClassName="org.postgresql.Driver"
		url="jdbc:postgresql://${jdbc.hostname:-host.docker.internal}:5432/testiaf"
		username="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
		maxTotal="10"
		maxWaitMillis="5000"
	/>

	<Resource name="jdbc/ibis4test-db2-xa" auth="Container"
		factory="org.apache.naming.factory.BeanFactory" 
		type="com.ibm.db2.jcc.DB2XADataSource"
		serverName="${jdbc.hostname:-host.docker.internal}"
		portNumber="50000"
		databaseName="testiaf"
		driverType="4"
		user="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
	/>

	<!-- DB2 XA does not work without BTM/Narayana, gives ClassCastException casting the XA datasource to Java datasource, so add non-XA for those cases -->
	<Resource name="jdbc/ibis4test-db2" auth="Container"
		type="javax.sql.DataSource" 
		driverClassName="com.ibm.db2.jcc.DB2Driver"
		url="jdbc:db2://${jdbc.hostname:-host.docker.internal}:50000/testiaf"
		username="${testiaf_user/username:-testiaf_user}"
		password="${testiaf_user/password:-testiaf_user00}"
	/>

	<Resource 
		name="mongodb/ibis4test"
		type="com.mongodb.MongoClient"
		factory="com.mongodb.client.MongoClientFactory"
		connectionString="mongodb://testiaf_user:testiaf_user00@${jdbc.hostname:-host.docker.internal}"
		auth="Container"
		singleton="true"
	/>


	<!-- Tibco crendentials can be set here via 'userName' and 'userPassword' attributes, or in the jmsRealm via authAlias (not via username and password) -->
	<Resource
		name="jms/qcf_tibco_esb_ff"
		factory="nl.nn.adapterframework.jndi.TomcatJndiProxy"
		
		delegate_name="SLXHP_Queue_ConnectionFactory"
		delegate_jndiProperties="TibcoJndi.properties"
		delegate_providerURL="tibjmsnaming://DEVESBLARGEDC1:37243,tibjmsnaming://DEVESBLARGEDC2:37243"
		
		userName="IBIS_AWS_POC_USER"
		userPassword="xxxxxxxxx"
		SSLEnableVerifyHost="false"
	/>
	<Resource
		name="jms/qcf_tibco_esb_rr"
		factory="nl.nn.adapterframework.jndi.TomcatJndiProxy"
		
		delegate_name="SLNHN_Queue_ConnectionFactory"
		delegate_jndiProperties="TibcoJndi.properties"
		delegate_providerURL="tibjmsnaming://DEVESBSMALLDC1:37243,tibjmsnaming://DEVESBSMALLDC2:37243"
		
		userName="IBIS_AWS_POC_USER"
		userPassword="xxxxxxxxx"
		SSLEnableVerifyHost="false"
	/>

	<Resource
		name="jms/GetMessageRequest"
		factory="nl.nn.adapterframework.jndi.TomcatJndiProxy"
		
		delegate_name="ESB.Infrastructure.TS.Test.TestIAF.1.GetMessage.1.Request"
		delegate_jndiProperties="TibcoJndi.properties"
		delegate_providerURL="tibjmsnaming://DEVESBSMALLDC1:37243,tibjmsnaming://DEVESBSMALLDC2:37243"
	/>

	<Resource
		name="jms/UpdateMessageAction"
		factory="nl.nn.adapterframework.jndi.TomcatJndiProxy"
		
		delegate_name="ESB.Infrastructure.TS.Test.TestIAF.1.UpdateMessage.1.Action"
		delegate_jndiProperties="TibcoJndi.properties"
		delegate_providerURL="tibjmsnaming://DEVESBLARGEDC1:37243,tibjmsnaming://DEVESBLARGEDC2:37243"
	/>

	<Resource name="jms/qcf-activemq"
		factory="org.apache.naming.factory.BeanFactory"
		type="org.apache.activemq.ActiveMQXAConnectionFactory"
		brokerURL="tcp://${jms.hostname:-host.docker.internal}:61616?jms.xaAckMode=1"
	/>

	<!-- Activemq-artemis resource configuration -->
	<Resource name="jms/qcf-artemis"
		factory="org.apache.naming.factory.BeanFactory"
		type="org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory"
		brokerURL="tcp://${jms.hostname:-host.docker.internal}:61615"
	/>

</Context>