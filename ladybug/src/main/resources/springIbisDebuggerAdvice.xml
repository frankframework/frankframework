<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation=
		"
		http://www.springframework.org/schema/beans classpath:xml/xsd/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop classpath:xml/xsd/spring-aop-3.2.xsd
		"
	>

	<bean
		name="ibisDebuggerAdvice,threadLifeCycleEventListener"
		class="nl.nn.ibistesttool.IbisDebuggerAdvice"
		autowire="byName"
	/>

	<aop:config proxy-target-class="true">
		<aop:aspect ref="ibisDebuggerAdvice">
			<!-- Param firstPipe was added with IAF v4_12_a11 -->
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.processors.CorePipeLineProcessor.processPipeLine(
							..
						)
					)
					and
					args(pipeLine, correlationId, message, pipeLineSession, ..)
					"
				method="debugPipeLineInputOutputAbort"
				arg-names="pipeLine, correlationId, message, pipeLineSession"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.processors.InputOutputPipeProcessor.processPipe(
							nl.nn.adapterframework.core.PipeLine,
							nl.nn.adapterframework.core.IPipe, 
							nl.nn.adapterframework.stream.Message,
							nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(pipeLine, pipe, message, pipeLineSession)
					"
				method="debugPipeInputOutputAbort"
				arg-names="pipeLine, pipe, message, pipeLineSession"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.processors.CheckSemaphorePipeProcessor.processPipe(
							nl.nn.adapterframework.core.PipeLine,
							nl.nn.adapterframework.core.IPipe, 
							nl.nn.adapterframework.stream.Message,
							nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(pipeLine, pipe, message, pipeLineSession)
					"
				method="debugPipeGetInputFrom"
				arg-names="pipeLine, pipe, message, pipeLineSession"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.core.ISender.sendMessage(
							nl.nn.adapterframework.stream.Message, 
							nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(message, session)
					"
				method="debugSenderInputOutputAbort"
				arg-names="message, session"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.core.IBlockEnabledSender+.sendMessage(
							*,
							nl.nn.adapterframework.stream.Message, 
							nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(blockHandle, message, session)
					"
				method="debugBlockEnabledSenderInputOutputAbort"
				arg-names="blockHandle, message, session"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.stream.IStreamingSender.sendMessage(
							nl.nn.adapterframework.stream.Message, 
							nl.nn.adapterframework.core.IPipeLineSession, 
							nl.nn.adapterframework.core.IForwardTarget
						)
					)
					and
					args(message, session, next)
					"
				method="debugStreamingSenderInputOutputAbort"
				arg-names="blockHandle, message, session, next"
			/>
			<aop:around
				pointcut=
					"
	 				execution(
	 					*
	 					nl.nn.adapterframework.stream.IOutputStreamingSupport.provideOutputStream(
	 						nl.nn.adapterframework.core.IPipeLineSession, 
	 						..
	 					)
	 				)
	 				and
	 				args(session, ..)
	 				"
				method="debugProvideOutputStream"
				arg-names="session"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.processors.CacheSenderWrapperProcessor.sendMessage(
							nl.nn.adapterframework.senders.SenderWrapperBase, 
							nl.nn.adapterframework.stream.Message, 
							nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(senderWrapperBase, message, session)
					"
				method="debugSenderGetInputFrom"
				arg-names="senderWrapperBase, message, session"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.processors.CoreListenerProcessor.getMessage(
							nl.nn.adapterframework.core.ICorrelatedPullingListener,
							String, nl.nn.adapterframework.core.IPipeLineSession
						)
					)
					and
					args(listener, correlationId, pipeLineSession)
					"
				method="debugReplyListenerInputOutputAbort"
				arg-names="listener, correlationId, pipeLineSession"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						org.springframework.core.task.TaskExecutor.execute(
							Runnable
						)
					)
					and
					args(runnable)
					"
				method="debugThreadCreateStartEndAbort"
				arg-names="runnable"
			/>
			<aop:around
				pointcut=
					"
					execution(
						*
						nl.nn.adapterframework.parameters.Parameter.getValue(
							nl.nn.adapterframework.parameters.ParameterValueList,
							nl.nn.adapterframework.stream.Message,
							nl.nn.adapterframework.core.IPipeLineSession,
							boolean
						)
					)
					and
					args(alreadyResolvedParameters, message, session, namespaceAware)
					"
				method="debugParameterResolvedTo"
				arg-names="alreadyResolvedParameters, message, session, namespaceAware"
			/>
		</aop:aspect>
	</aop:config>

</beans>
